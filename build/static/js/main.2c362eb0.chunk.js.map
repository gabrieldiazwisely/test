{"version":3,"sources":["auth/AuthProvider.js","redux/actions/notificationActions.js","redux/constants/userConstants.js","constants/storageConstants.js","helpers/history.js","helpers/auth.js","helpers/httpRequest.js","helpers/fakeData.js","configs/config.js","services/userService.js","redux/actions/userActions.js","components/SignIn/style.jsx","components/SignIn/SignInForm.jsx","components/SignIn/RightSideContent.jsx","components/SignIn/SignIn.jsx","components/Register/Register.jsx","components/SignOut/SignOut.jsx","components/Sidebar/style.jsx","components/Sidebar/PersonalMenu.jsx","components/Sidebar/styleResult.jsx","components/Sidebar/AlertResult.jsx","components/Sidebar/Alerts.jsx","components/Sidebar/Sidebar.jsx","components/Dashboard/Dashboard.jsx","containers/App.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","views/Dashboard/Dashboard.jsx","routes/paths.js","auth/withAuthorization.js","routes/index.js","registerServiceWorker.js","index.js","assets/img/fondo_login.png","assets/img/video_login.gif","assets/img/logo_login.svg","assets/img/logo-light.svg","assets/img/logo.svg","assets/img/logo_small.svg"],"names":["AuthProvider","Component","constructor","super","this","state","componentDidMount","setState","user","props","getChildContext","authorize","render","children","childContextTypes","PropTypes","func","object","connected","connect","notificationActions","success","uid","message","notification","_getRandomId","title","dispatch","Notifications","error","warning","info","hide","clear","removeAll","position","autoDismiss","Math","random","toString","substring","userConstants","storageConstants","history","createBrowserHistory","auth","getHeader","getLoggedUser","token","Authorization","isLogin","exp","floor","Date","getTime","JSON","parse","localStorage","getItem","HTTP_SUCCESS_STATUSES","HTTP_ERROR_STATUSES","DEFAULT_HEADERS","Accept","HttpRequest","protocol","hostname","port","headers","_protocol","_hostname","_port","_headers","Object","assign","url","method","path","body","requestOptions","mode","keys","length","stringify","URL","fetch","res","json","data","includes","status","Promise","resolve","Error","reject","config","restapiAuth","server","process","REACT_APP_REST_API_PROTOCOL","window","location","split","REACT_APP_REST_API_BASE_PATH","REACT_APP_REST_API_AUTH_PORT","routes","signup","signin","apiGateway","REACT_APP_REST_API_HOSTNAME","REACT_APP_REST_API_PORT","userService","payload","request","username","password","userActions","a","result","replace","then","jwtDecode","role","setItem","console","log","failure","type","signout","err","debug","useStyles","makeStyles","theme","textInput","margin","width","height","backgroundColor","submitButton","background","boxShadow","borderRadius","fontFamily","fontSize","fontWeight","letterSpacing","color","opacity","userOptions","justifyContent","alignItems","marginTop","checkBox","forgotPassword","rightContent","backgroundImage","GreenBack","backgroundRepeat","backgroundSize","alignCenter","alignSelf","laptopTitle","textAlign","laptopText","direction","display","flexDirection","laptopWidth","SignInForm","classes","userNameError","passwordError","onSubmit","handleSubmit","noValidate","autoComplete","style","FormGroup","row","TextField","className","placeholder","id","label","name","variant","value","onChange","handleChange","required","Button","RightSideContent","Grid","item","xs","sm","container","justify","Typography","component","src","LaptopBack","alt","initialState","SignIn","context","event","target","handleCheckBoxChange","checked","handleRedirect","preventDefault","catch","mqtt","unsubscribe","Logo","defaultProps","repeatPassword","email","lastname","Register","bind","usernameInput","focus","passwordInput","repeatPasswordInput","emailInput","nameInput","lastnameInput","fluid","Row","Col","md","size","offset","lg","Card","inverse","CardTitle","CardText","CardBody","logo","Form","Label","for","Input","innerRef","input","block","to","SignOut","root","flexGrow","NavButton","padding","marginLeft","marginRight","logo_small","NavAll","spacing","NavList","NavPersonalConfig","NavAlert","paddingTop","NavAlertBadge","NavName","cursor","paper","badge","navMenuItem","removeOver","progress","top","left","StyledMenu","withStyles","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","MenuItem","PersonalMenu","React","useState","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","Fragment","Avatar","aria-controls","aria-haspopup","onClick","keepMounted","open","Boolean","onClose","ListItemIcon","ListItemText","primary","zIndex","overFlowText","textOverflow","overflow","AlertResult","date","created","toUTCString","key","read","scene_name","project_name","img","Alerts","useDispatch","flag","setFlag","alerts","useSelector","sidebar","useEffect","handleClickMarkAll","handleSortAlerts","IconButton","Badge","badgeContent","unread","clsx","Tooltip","as","Link","map","index","CircularProgress","DASH_ROUTES","icon","pathname","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","renderMobileMenu","prop","AppBar","Toolbar","Hidden","smDown","mdUp","aria-label","Dashboard","shouldComponentUpdate","nextProps","nextStates","App","isAuthed","listen","locationChanged","notifications","Container","maxWidth","Box","pt","withRouter","loadingBar","action","middlewares","routerMiddleware","thunkMiddleware","persistConfig","storage","rootReducer","combineReducers","router","connectRouter","persistedReducer","persistReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","routePaths","requirements","configs","WrappableComponent","unauthorized","contextTypes","loggedOutRole","oneOfType","string","symbol","withAuthorization","User","exact","needAuth","Routes","route","strict","isLocalhost","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","setup","loading","some","requirement","document","querySelector","origin","addEventListener","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.2c362eb0.chunk.js","sourcesContent":["import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nclass AuthProvider extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n  static childContextTypes = {\n    authorize: PropTypes.func,\n    user: PropTypes.object\n  }\n  componentDidMount() {\n    this.setState({ user: this.props.user })\n  }\n  getChildContext() {\n    const { user, authorize } = this.props\n    return {\n      user,\n      authorize\n    }\n  }\n  render() {\n    return this.props.children\n  }\n}\n\nAuthProvider.propTypes = {\n  children: PropTypes.node,\n  user: PropTypes.object,\n  authorize: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state\n  return { user }\n}\n\nconst connected = connect(mapStateToProps)(AuthProvider)\nexport { connected as AuthProvider }\n","import Notifications from 'react-notification-system-redux'\n\nexport const notificationActions = {\n  success,\n  error,\n  warning,\n  info,\n  hide,\n  clear\n}\n\nconst notification = {\n  title: '',\n  message: '',\n  position: 'tr',\n  autoDismiss: ''\n}\n\nfunction success({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Success'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.success(notification))\n  }\n}\n\nfunction error({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Error'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.error(notification))\n  }\n}\n\nfunction warning({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Warning'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.warning(notification))\n  }\n}\n\nfunction info({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Info'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.info(notification))\n  }\n}\n\nfunction hide(uid) {\n  return dispatch => {\n    dispatch(Notifications.hide(uid))\n  }\n}\n\nfunction clear() {\n  return dispatch => {\n    dispatch(Notifications.removeAll())\n  }\n}\n\nfunction _getRandomId() {\n  return Math.random()\n    .toString(36)\n    .substring(2)\n}\n","export const userConstants = {\n  SIGNIN_SUCCESS: 'USER_SIGNIN_SUCCESS',\n  SIGNIN_FAILURE: 'USER_SIGNIN_FAILURE',\n  SIGNOUT_SUCCESS: 'USER_SIGNOUT_SUCCESS'\n}\n","export const storageConstants = {\n  LOGGED_USER: 'LOGGED_USER'\n}\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport { history }\n","import { storageConstants } from '../constants'\n\nexport const auth = {\n  getHeader,\n  isLogin,\n  getLoggedUser\n}\n\n// return Authorization header with JWT\nfunction getHeader() {\n  const user = getLoggedUser()\n  return user && user.token\n    ? {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      }\n    : {}\n}\n\nfunction isLogin() {\n  const user = getLoggedUser()\n  // TODO validate token with backend service\n  // TODO if token expired delete token from localstorage\n  return (\n    user && user.token && user.exp > Math.floor(new Date().getTime() / 1000)\n  )\n}\n\nfunction getLoggedUser() {\n  return JSON.parse(localStorage.getItem(storageConstants.LOGGED_USER))\n}\n","/*\n2xx Success\n200 OK\n201 Created\n204 No Content\n\n4xx Client errors\n401 Unauthorized\n403 Forbidden\n404 Not Found\n412 Precondition Failed\n\n5xx Server errors\n500 Internal Server Error\n501 Not Implemented\n*/\nconst HTTP_SUCCESS_STATUSES = [200, 201, 204]\nconst HTTP_ERROR_STATUSES = [401, 403, 404, 412, 500, 501]\nconst DEFAULT_HEADERS = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n}\n\nclass HttpRequest {\n  static setup({ protocol = 'http', hostname = '', port = 0, headers = {} }) {\n    this._protocol = protocol\n    this._hostname = hostname\n    this._port = port\n    this._headers = Object.assign({}, headers, DEFAULT_HEADERS)\n  }\n\n  static async request({\n    url = null,\n    method = 'POST',\n    headers = {},\n    path = '',\n    body = {}\n  }) {\n    const requestOptions = {\n      method: method,\n      mode: 'cors',\n      headers: Object.assign({}, this._headers, headers)\n    }\n    if (typeof body === 'object' && Object.keys(body).length !== 0) {\n      requestOptions.body = JSON.stringify(body)\n    }\n    const URL = url\n      ? `${url}${path}`\n      : `${this._protocol}://${this._hostname}:${this._port}${path}`\n    const res = await fetch(URL, requestOptions)\n    let data\n    try {\n      data = await res.json()\n    } catch (err) {\n      data = []\n    }\n    if (HTTP_SUCCESS_STATUSES.includes(res.status)) {\n      return Promise.resolve({ status: res.status, data })\n    } else if (HTTP_ERROR_STATUSES.includes(res.status)) {\n      const error = new Error(data.message || 'Internal Server Error')\n      error.status = res.status\n      return Promise.reject(error)\n    } else {\n      throw new Error('Network response was not ok')\n    }\n  }\n}\n\nexport { HttpRequest }\n","export const users = [\n  {\n    id: 0,\n    user: 'admin',\n    email: 'user@exmple.com',\n    password: 'password',\n  }\n]\n","export const config = {\n  restapiAuth: {\n    server: {\n      protocol:\n        process.env.REACT_APP_REST_API_PROTOCOL ||\n        window.location.protocol.split(':')[0],\n      hostname:\n        process.env.REACT_APP_REST_API_BASE_PATH || window.location.hostname,\n      port: process.env.REACT_APP_REST_API_AUTH_PORT\n    },\n    routes: {\n      signup: '/signup',\n      signin: '/signin'\n    }\n  },\n  apiGateway: {\n    server: {\n      protocol:\n        process.env.REACT_APP_REST_API_PROTOCOL ||\n        window.location.protocol.split(':')[0],\n      hostname:\n        process.env.REACT_APP_REST_API_HOSTNAME || window.location.hostname,\n      port: process.env.REACT_APP_REST_API_PORT\n    }\n  }\n}\n","import { HttpRequest } from '../helpers'\nimport { config } from '../configs'\n\nexport const userService = {\n  signup,\n  signin\n}\n\nconst { protocol, hostname, port } = config.restapiAuth.server\n\nfunction signup(payload) {\n  const requestOptions = {\n    url: `${protocol}://${hostname}:${port}/signup`,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: payload\n  }\n  return HttpRequest.request(requestOptions)\n}\n\nfunction signin(username, password) {\n  const requestOptions = {\n    url: `${protocol}://${hostname}:${port}/auth-signin`,\n    method: 'POST',\n    body: { username: username, password: password },\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  return HttpRequest.request(requestOptions)\n}\n","import jwtDecode from 'jwt-decode'\nimport { replace } from 'connected-react-router'\n\nimport { userConstants } from '../constants'\nimport { storageConstants } from '../../constants'\nimport { userService } from '../../services'\nimport { notificationActions } from './'\n\nexport const userActions = {\n  signup,\n  signin,\n  signout\n}\n\nfunction signup(payload) {\n  return async dispatch => {\n    try {\n      const res = await userService.signup(payload)\n      if (res && res.result === 201) {\n        dispatch(replace('/signin'))\n      } else {\n        throw new Error(res.message || 'Internal Server Error')\n      }\n    } catch (err) {\n      dispatch(\n        notificationActions.error({\n          message: err.message\n        })\n      )\n    }\n  }\n}\n\nfunction signin(username, password) {\n  return async dispatch => {\n    return userService.signin(username, password).then(\n      res => {\n        // signin successful if there's a jwt token in the response\n        if (res && res.data && res.data.token) {\n          const { username, exp, role = 'user' } = jwtDecode(res.data.token)\n          const user = {\n            username: username,\n            exp: exp,\n            role: role,\n            token: res.data.token\n          }\n          // store user details and jwt token in local storage to keep user\n          // logged in between page refreshes\n          localStorage.setItem(\n            storageConstants.LOGGED_USER,\n            JSON.stringify(user)\n          )\n          dispatch(success(user))\n          dispatch(replace('/dashboard'))\n          return\n        } else {\n          throw new Error(res.message || 'Internal Server Error')\n        }\n      },\n      error => {\n        console.log(error)\n        dispatch(failure(error.message))\n        dispatch(\n          notificationActions.error({\n            message: error.message\n          })\n        )\n      }\n    )\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.SIGNIN_SUCCESS,\n      user\n    }\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.SIGNIN_FAILURE,\n      error\n    }\n  }\n}\n\nfunction signout() {\n  return dispatch => {\n    try {\n      // remove user from local storage to log user out\n      localStorage.clear()\n      dispatch(success())\n      dispatch(replace('/signin'))\n    } catch (err) {\n      console.debug(`[USER_ACTION] fn=signout, err=${err}`)\n    }\n  }\n\n  function success() {\n    return {\n      type: userConstants.SIGNOUT_SUCCESS\n    }\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport GreenBack from '../../assets/img/fondo_login.png'\n\nexport const useStyles = makeStyles(theme => ({\n  textInput: {\n    margin: 8,\n    width: '90%',\n    height: '48px',\n    backgroundColor: '#FFFFFF'\n  },\n  submitButton: {\n    margin: 8,\n    width: '90%',\n    background: '#2BB38B 0% 0% no-repeat padding-box',\n    boxShadow: '0px 5px 5px #0000001F',\n    borderRadius: '30px',\n    height: '48px',\n    fontFamily: 'Roboto',\n    fontSize: '16px',\n    fontWeight: 500,\n    letterSpacing: '0.16px',\n    color: '#FFFFFF',\n    opacity: 1\n  },\n  userOptions: {\n    width: '90%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '8px'\n  },\n  checkBox: { color: '#2BB38B' },\n  forgotPassword: {\n    color: '#2BB38B',\n    fontFamily: 'Roboto',\n    fontWeight: 400\n  },\n  rightContent: {\n    backgroundImage: `url(${GreenBack})`,\n    height: '769px',\n    backgroundRepeat: 'repeat-x',\n    backgroundSize: 'contain'\n  },\n  alignCenter: { alignSelf: 'center' },\n  laptopTitle: {\n    fontSize: '2.8rem',\n    color: '#FFFFFF',\n    width: '50%',\n    margin: '0 auto',\n    fontFamily: 'Roboto',\n    fontWeight: '600',\n    textAlign: 'center'\n  },\n  laptopText: {\n    fontSize: '1.5rem',\n    color: '#FFFFFF',\n    width: '80%',\n    margin: '10px auto',\n    fontFamily: 'Roboto',\n    textAlign: 'center'\n  },\n  direction: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  laptopWidth: {\n    width: '75%',\n    margin: '0 auto'\n  }\n}))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, TextField, Button } from '@material-ui/core'\nimport { useStyles } from './style'\n\nconst SignInForm = props => {\n  const classes = useStyles()\n  const { userNameError, username, passwordError, password } = props\n  return (\n    <form\n      onSubmit={props.handleSubmit}\n      noValidate\n      autoComplete='off'\n      style={{\n        display: 'flex',\n        width: '100%',\n        textAlign: 'center',\n        marginTop: '20px',\n        flexDirection: 'column'\n      }}\n    >\n      <FormGroup row>\n        <TextField\n          className={classes.textInput}\n          placeholder='Username'\n          error={userNameError}\n          id='user-name'\n          label='Username'\n          name='username'\n          type='text'\n          variant='outlined'\n          value={username}\n          onChange={props.handleChange}\n          required\n        />\n      </FormGroup>\n      <FormGroup row>\n        <TextField\n          className={classes.textInput}\n          placeholder='Password'\n          error={passwordError}\n          id='outlined-password-input'\n          label='Password'\n          name='password'\n          type='password'\n          variant='outlined'\n          value={password}\n          onChange={props.handleChange}\n          required\n        />\n      </FormGroup>\n      <FormGroup row>\n        <Button\n          className={classes.submitButton}\n          type='submit'\n          variant='contained'\n        >\n          Sign In\n        </Button>\n      </FormGroup>\n    </form>\n  )\n}\n\nSignInForm.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  userNameError: PropTypes.bool.isRequired,\n  username: PropTypes.string.isRequired,\n  passwordError: PropTypes.bool.isRequired,\n  password: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleCheckBoxChange: PropTypes.func.isRequired,\n  handleRedirect: PropTypes.func.isRequired\n}\n\nexport default SignInForm\n","import React from 'react'\nimport { Grid, Typography } from '@material-ui/core'\nimport { useStyles } from './style'\nimport LaptopBack from '../../assets/img/video_login.gif'\n\nconst RightSideContent = () => {\n  const classes = useStyles()\n  return (\n    <Grid\n      item\n      className={classes.rightContent}\n      xs={12}\n      sm={7}\n      container\n      direction='column'\n      justify='center'\n      alignItems='center'\n    >\n      <div className={classes.direction}>\n        <Typography component='h1' className={classes.laptopTitle}>\n          Smart eyes for your business\n        </Typography>\n        <Typography component='p' className={classes.laptopText}>\n          Build your AI Video Analytics Solution with a visual editor. Transform\n          your cameras into a Smart Video Solution.\n        </Typography>\n      </div>\n      <div className={classes.direction}>\n        <img\n          src={LaptopBack}\n          alt='laptop computer'\n          className={classes.laptopWidth}\n        />\n      </div>\n    </Grid>\n  )\n}\n\nexport default RightSideContent\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Grid } from '@material-ui/core'\nimport { userActions, notificationActions } from '../../redux/actions'\nimport SignInForm from './SignInForm'\nimport RightSideContent from './RightSideContent'\nimport Logo from '../../assets/img/logo_login.svg'\n\nconst initialState = {\n  username: '',\n  password: ''\n}\n\nclass SignIn extends Component {\n  constructor(props, context) {\n    super(props, context)\n    // this.mqtt = new MQTT()\n    this.state = {\n      ...this.props,\n      passwordError: false,\n      userNameError: false,\n      checked: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.dispatch(notificationActions.clear())\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n    const { dispatch } = this.props\n    dispatch(notificationActions.clear())\n  }\n\n  handleCheckBoxChange = () => {\n    this.setState({ checked: !this.state.checked })\n  }\n\n  handleRedirect = () => {\n    console.log('should redirect')\n  }\n\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { dispatch } = this.props\n    const { username, password } = this.state\n    if (this.state.username.length === 0) {\n      dispatch(notificationActions.error({ message: 'Invalid Username' }))\n      this.setState({ userNameError: true })\n      return\n    } else {\n      this.setState({ userNameError: false })\n    }\n    if (this.state.password.length === 0) {\n      dispatch(notificationActions.error({ message: 'Wrong Password' }))\n      this.setState({ passwordError: true })\n      return\n    } else {\n      this.setState({ passwordError: false })\n    }\n\n    dispatch(userActions.signin(username, password))\n      .then(() => {\n        \n      })\n      .catch(error => {\n        console.log(error)\n      })\n    this.setState(initialState)\n  }\n\n  render() {\n    this.mqtt.unsubscribe('#')\n    return (\n      <Grid container direction='row' justify='center'>\n        <Grid\n          item\n          container\n          xs={12}\n          sm={5}\n          direction='row'\n          justify='center'\n          alignItems='center'\n        >\n          <div style={{ width: '100%' }}>\n            <div\n              style={{ width: '80%', textAlign: 'center', margin: '0 auto' }}\n            >\n              <img src={Logo} alt='smart video logo' />\n            </div>\n            <div\n              style={{ width: '80%', textAlign: 'center', margin: '0 auto' }}\n            >\n              <SignInForm\n                checked={this.state.checked}\n                userNameError={this.state.userNameError}\n                username={this.state.username}\n                passwordError={this.state.passwordError}\n                password={this.state.password}\n                handleSubmit={this.handleSubmit}\n                handleChange={this.handleChange}\n                handleCheckBoxChange={this.handleCheckBoxChange}\n                handleRedirect={this.handleRedirect}\n              />\n            </div>\n          </div>\n        </Grid>\n        <RightSideContent />\n      </Grid>\n    )\n  }\n}\n\nSignIn.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n}\n\nSignIn.defaultProps = {\n  ...initialState\n}\n\nconst connected = connect()(SignIn)\nexport { connected as SignIn }\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Card,\n  CardTitle,\n  CardText,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap'\n\nimport { userActions, notificationActions } from '../../redux/actions'\n\nimport logo from '../../assets/img/logo-light.svg'\n\nconst initialState = {\n  username: '',\n  password: '',\n  repeatPassword: '',\n  email: '',\n  name: '',\n  lastname: ''\n}\n\nclass Register extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = initialState\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  componentDidMount() {\n    this.usernameInput.focus()\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n  handleSubmit(event) {\n    event.preventDefault()\n    const { dispatch } = this.props\n    if (this.state.username.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: 'Missing required parameters: User name'\n        })\n      )\n      this.usernameInput.focus()\n      return\n    }\n    if (this.state.password.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: 'Missing required parameters: Password'\n        })\n      )\n      this.passwordInput.focus()\n      return\n    }\n    if (this.state.repeatPassword.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: 'Missing required parameters: Repeat Password'\n        })\n      )\n      this.repeatPasswordInput.focus()\n      return\n    }\n    if (this.state.email.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: 'Missing required parameters: Email'\n        })\n      )\n      this.emailInput.focus()\n      return\n    }\n    if (this.state.name.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: 'Missing required parameters: Name'\n        })\n      )\n      this.nameInput.focus()\n      return\n    }\n    if (this.state.lastname.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: 'Missing required parameters: Last Name'\n        })\n      )\n      this.lastnameInput.focus()\n      return\n    }\n    dispatch(userActions.signup({ ...this.state }))\n    this.setState(initialState)\n  }\n  render() {\n    return (\n      <Container fluid className='bg-login'>\n        <Row>\n          <Col\n            className='mt-5 card-login'\n            sm='12'\n            md={{ size: 6, offset: 3 }}\n            lg={{ size: 4, offset: 4 }}\n          >\n            <Card body inverse color='primary' className='no-radius'>\n              <CardTitle>CREATE A NEW USER</CardTitle>\n              <CardText>\n                You can use your Email or a Username to access the system\n              </CardText>\n              <div className='icon-register'>\n                <i className='material-icons'>how_to_reg</i>\n              </div>\n            </Card>\n            <Card className='no-radius'>\n              <CardBody>\n                <CardTitle>Register form</CardTitle>\n                <div className='icon-intel-register'>\n                  <img className='mt-4' width='60' src={logo} alt='' />\n                </div>\n                <Form onSubmit={this.handleSubmit}>\n                  <FormGroup>\n                    <Label for='userName'>Username</Label>\n                    <Input\n                      type='text'\n                      name='username'\n                      id='userName'\n                      innerRef={input => {\n                        this.usernameInput = input\n                      }}\n                      value={this.state.username}\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <Row>\n                    <Col sm='12' md='6'>\n                      <FormGroup>\n                        <Label for='userPassword'>Password</Label>\n                        <Input\n                          type='password'\n                          name='password'\n                          id='userPassword'\n                          innerRef={input => {\n                            this.passwordInput = input\n                          }}\n                          value={this.state.password}\n                          onChange={this.handleChange}\n                          autoComplete='true'\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col sm='12' md='6'>\n                      <FormGroup>\n                        <Label for='userRepeatPassword'>Repeat Password</Label>\n                        <Input\n                          type='password'\n                          name='repeatPassword'\n                          id='userRepeatPassword'\n                          innerRef={input => {\n                            this.repeatPasswordInput = input\n                          }}\n                          value={this.state.repeatPassword}\n                          onChange={this.handleChange}\n                          autoComplete='true'\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <FormGroup>\n                    <Label for='Email'>Email</Label>\n                    <Input\n                      type='email'\n                      name='email'\n                      id='Email'\n                      innerRef={input => {\n                        this.emailInput = input\n                      }}\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <Row>\n                    <Col sm='12' md='6'>\n                      <FormGroup>\n                        <Label for='name'>Name</Label>\n                        <Input\n                          type='text'\n                          name='name'\n                          id='name'\n                          innerRef={input => {\n                            this.nameInput = input\n                          }}\n                          value={this.state.name}\n                          onChange={this.handleChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col sm='12' md='6'>\n                      <FormGroup>\n                        <Label for='lastName'>Last Name</Label>\n                        <Input\n                          type='text'\n                          name='lastname'\n                          id='lastName'\n                          innerRef={input => {\n                            this.lastnameInput = input\n                          }}\n                          value={this.state.lastname}\n                          onChange={this.handleChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Button className='mt-3' size='lg' block>\n                    Sign Up\n                  </Button>\n                </Form>\n              </CardBody>\n            </Card>\n            <p className='text-right mt-3'>\n              <em>\n                Already have an account?{' '}\n                <Link to='/signin' replace>\n                  Sign In\n                </Link>\n              </em>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nconst connected = connect()(Register)\nexport { connected as Register }\n","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { userActions } from '../../redux/actions'\n\nclass SignOut extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props\n    dispatch(userActions.signout())\n  }\n  render() {\n    return null\n  }\n}\n\nconst connected = connect()(SignOut)\nexport { connected as SignOut }\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none',\n    background: '#fff'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  NavButton: {\n    // border: '1px solid #E5E5E5',\n    borderRadius: '15px',\n    padding: '10px 20px',\n    marginLeft: '20px',\n    marginRight: '20px',\n    color: '#2BB38B'\n  },\n  logo: {\n    height: 55,\n    width: 209\n  },\n  logo_small: {\n    height: 55\n  },\n  NavAll: {\n    marginTop: theme.spacing(2)\n  },\n  NavList: {\n    textAlign: 'center'\n  },\n  NavPersonalConfig: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    color: '#bdbdbd'\n  },\n  NavAlert: {\n    color: '#DAD7D6',\n    paddingTop: '5px',\n    '&:hover': {\n      background: 'none',\n      color: '#2BB38B'\n    }\n  },\n  NavAlertBadge: {},\n  NavName: {\n    marginTop: '10px',\n    marginLeft: '5px',\n    color: '#888888',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    height: '35px'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  badge: {\n    background: 'blue'\n  },\n  navMenuItem: {\n    color: '#333333 !important'\n  },\n  removeOver: {\n    '&:hover': {\n      background: 'none',\n      cursor: 'auto'\n    }\n  },\n  progress: {\n    position: 'absolute',\n    top: '70px',\n    left: '5px'\n  }\n}))\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Menu, Avatar, Grid } from '@material-ui/core'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\n\nimport { useStyles } from './style'\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {}\n}))(MenuItem)\n\nexport default function PersonalMenu() {\n  const classes = useStyles()\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <React.Fragment>\n      <Avatar\n        aria-controls='customized-menu'\n        aria-haspopup='true'\n        color='primary'\n        onClick={handleClick}\n      >\n        G\n      </Avatar>\n      <Typography\n        className={classes.NavName}\n        aria-controls='simple-menu'\n        aria-haspopup='true'\n        onClick={handleClick}\n      >\n        Guest\n      </Typography>\n      <StyledMenu\n        id='customized-menu'\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Avatar>G</Avatar>\n            </Grid>\n            <Grid item>\n              <Typography variant='h6'>Guest</Typography>\n              {/* <Typography color='secondary'>View profile</Typography> */}\n            </Grid>\n          </Grid>\n        </MenuItem>\n        <NavLink to='/account' className={classes.navMenuItem}>\n          <StyledMenuItem>\n            <ListItemIcon>\n              <SettingsIcon fontSize='small' />\n            </ListItemIcon>\n            <ListItemText primary='Account' />\n          </StyledMenuItem>\n        </NavLink>\n        <NavLink to='/signout' className={classes.navMenuItem}>\n          <StyledMenuItem>\n            <ListItemIcon>\n              <ExitToAppIcon fontSize='small' />\n            </ListItemIcon>\n            <ListItemText primary='Logout' />\n          </StyledMenuItem>\n        </NavLink>\n      </StyledMenu>\n    </React.Fragment>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    background: '#fff',\n    zIndex: 1,\n    '&:hover': {\n      backgroundColor: '#fafafa'\n    }\n  },\n  overFlowText: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  }\n}))\n","import React from 'react'\nimport Moment from 'react-moment'\n\nimport { MenuItem, Typography, Grid, Avatar } from '@material-ui/core'\nimport { useStyles } from './styleResult'\n\nconst AlertResult = props => {\n  const classes = useStyles()\n\n  const date = new Date(props.created)\n    .toUTCString()\n    .toString('yyyy-mm-dd, h:MM:ss ')\n\n  return (\n    <MenuItem\n      onClick={props.handleClose}\n      key={props.key}\n      className={classes.root}\n    >\n      <Grid container spacing={1}>\n        <Grid item xs={9} className={classes.overFlowText}>\n          <Typography variant='caption'>{date}</Typography>\n          <Typography\n            variant='h6'\n            style={{ color: props.read ? '#888888' : '' }}\n          >\n            {props.title}{' '}\n          </Typography>\n          <Typography variant='subtitle1'>{props.scene_name}</Typography>\n          <Typography variant='subtitle1'>{props.project_name}</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Avatar variant='rounded' alt='title' src={props.img} />\n        </Grid>\n      </Grid>\n    </MenuItem>\n  )\n}\n\nexport default AlertResult\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink, Link } from 'react-router-dom'\nimport clsx from 'clsx'\nimport { useStyles } from './style'\n// import { alertsActions } from '../../redux/actions'\nimport AlertResult from './AlertResult'\n\n\nimport {\n  IconButton,\n  Badge,\n  Menu,\n  MenuItem,\n  Grid,\n  Tooltip,\n  CircularProgress\n} from '@material-ui/core'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\n\nconst Alerts = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const [flag, setFlag] = React.useState(true)\n\n  const channel = '/api/updates'\n  const alerts = useSelector(state => {\n    return state.alerts.sidebar\n  })\n\n  \n\n  useEffect(() => {\n    if (flag || !alerts) {\n      setFlag(false)\n      // dispatch(alertsActions.getAllSidebar('?limit=0'))\n      console.log('%c useEffect', 'background:red; color: #adadad;')\n    }\n  }, [alerts])\n\n  const renderAlerts = () => {\n    return alerts.data.map((value, index) => (\n      <AlertResult key={index} {...value} handleClose={handleClose} />\n    ))\n  }\n\n  const renderActions = () => {\n    return (\n      <MenuItem className={classes.removeOver}>\n        <Grid container direction='row' justify='flex-end' alignItems='center'>\n          <Grid item>\n            <Tooltip title='Mark All as Read'>\n              <NavLink\n                to='#'\n                key='markAll'\n                onClick={handleClickMarkAll}\n                style={{ marginRight: '15px' }}\n              >\n                <DoneAllIcon />\n              </NavLink>\n            </Tooltip>\n            <Tooltip title='Show All'>\n              <NavLink to='/alerts' key='alerts' as={Link}>\n                <MoreHorizIcon />\n              </NavLink>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </MenuItem>\n    )\n  }\n\n  const handleClickMarkAll = () => {\n    // dispatch(alertsActions.getAllSidebar('?limit=10&markall=1'))\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const handleClick = event => {\n    handleSortAlerts()\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleSortAlerts = () => {\n    // dispatch(alertsActions.getAllSidebar('?limit=10'))\n  }\n\n  const renderProgress = () => {\n    return (\n      <MenuItem className={classes.progress}>\n        <CircularProgress size={25} />\n      </MenuItem>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <IconButton\n        color='inherit'\n        className={classes.NavAlert}\n        aria-controls='simple-menu'\n        aria-haspopup='true'\n        onClick={handleClick}\n      >\n        <Badge\n          badgeContent={alerts.unread}\n          color='secondary'\n          className={clsx(classes.NavAlertBadge, 'badgeRef')}\n        >\n          <NotificationsIcon style={{ fontSize: 30 }} />\n        </Badge>\n      </IconButton>\n      <Menu\n        id='menu-appbar'\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {renderActions()}\n        {renderAlerts()}\n        {renderProgress()}\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nexport default Alerts\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport clsx from 'clsx'\n\nimport PersonalMenu from './PersonalMenu'\nimport Alerts from './Alerts'\n\nimport {\n  AppBar,\n  Toolbar,\n  Hidden,\n  IconButton,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Grid,\n  Avatar\n} from '@material-ui/core'\n\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\n\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\n\nimport { useStyles } from './style'\nimport logo from '../../assets/img/logo.svg'\nimport logo_small from '../../assets/img/logo_small.svg'\n\nconst DASH_ROUTES = [\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    icon: <DashboardIcon style={{ fontSize: 30 }} />\n  },\n  {\n    path: '/projects',\n    name: 'Projects',\n    icon: <BusinessCenterIcon style={{ fontSize: 30 }} />\n  },\n  {\n    path: '/market',\n    name: 'Market',\n    icon: <ShoppingCartIcon style={{ fontSize: 30 }} />\n  }\n  // { path: '/signout', name: 'Logout', icon: <ExitToAppIcon style={{ fontSize: 30 }} /> }\n]\n\nconst Sidebar = () => {\n  const classes = useStyles()\n  const pathname = window.location.pathname.replace(/\\//g, '')\n\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n\n  const handleMobileMenuOpen = event => {\n    console.log('event.currentTarget', event.currentTarget)\n    setMobileMoreAnchorEl(event.currentTarget)\n  }\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null)\n  }\n\n  const mobileMenuId = 'primary-search-account-menu-mobile'\n\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {DASH_ROUTES.map((prop, key) => {\n        return (\n          <MenuItem key={key}>\n            <NavLink to={prop.path}>\n              {' '}\n              <IconButton className={classes.NavButton} color='primary'>\n                {prop.icon} {prop.name}\n              </IconButton>\n            </NavLink>\n          </MenuItem>\n        )\n      })}\n      <MenuItem key='account'>\n        <NavLink to='/account'>\n          {' '}\n          <IconButton className={classes.NavButton} color='primary'>\n            <SettingsIcon style={{ fontSize: 30 }} /> Account\n          </IconButton>\n        </NavLink>\n      </MenuItem>\n      <MenuItem key='logout'>\n        <NavLink to={'/signout'}>\n          {' '}\n          <IconButton className={classes.NavButton} color='primary'>\n            <ExitToAppIcon style={{ fontSize: 30 }} /> Logout\n          </IconButton>\n        </NavLink>\n      </MenuItem>\n    </Menu>\n  )\n\n  return (\n    <AppBar className={clsx(classes.root)}>\n      <Toolbar>\n        <Grid container className={classes.NavAll}>\n          <Grid item xs={12} sm={2}>\n            <NavLink to='/projects'>\n              <Hidden smDown>\n                <img alt='Logo' src={logo} className={classes.logo} />\n              </Hidden>\n              <Hidden mdUp>\n                <img\n                  alt='Logo'\n                  src={logo_small}\n                  className={classes.logo_small}\n                />\n              </Hidden>\n            </NavLink>\n          </Grid>\n          <Grid item xs={12} sm={8} className={classes.NavList}>\n            <div className={classes.flexGrow} />\n            <Hidden smDown>\n              {DASH_ROUTES.map((prop, key) => {\n                return (\n                  <Tooltip title={prop.name} key={key}>\n                    <NavLink to={prop.path} key={key}>\n                      <IconButton className={classes.NavButton} color='primary'>\n                        {prop.icon}\n                      </IconButton>\n                    </NavLink>\n                  </Tooltip>\n                )\n              })}\n            </Hidden>\n          </Grid>\n          <Grid item xs={12} sm={2} className={classes.NavPersonalConfig}>\n            <Hidden smDown>\n              <PersonalMenu />\n            </Hidden>\n          </Grid>\n        </Grid>\n\n        <Hidden mdUp>\n          <Avatar>CM</Avatar>\n        </Hidden>\n        <Alerts />\n        <Hidden mdUp>\n          <IconButton\n            aria-controls={mobileMenuId}\n            aria-label='show more'\n            aria-haspopup='true'\n            color='primary'\n            onClick={handleMobileMenuOpen}\n          >\n            <MoreIcon />\n          </IconButton>\n        </Hidden>\n\n        {renderMobileMenu}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nconst connected = connect()(Sidebar)\nexport { connected as Sidebar }\n","import React, { Component } from 'react'\nimport './Dashboard.css'\n\n\nclass Dashboard extends Component {\n  shouldComponentUpdate(nextProps, nextStates) {\n    return false\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        Cesar\n      </React.Fragment>\n    )\n  }\n}\n\nexport { Dashboard }\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport Notifications from 'react-notification-system-redux'\nimport PropTypes from 'prop-types'\n\nimport { notificationActions } from '../redux/actions'\n\nimport { Container, Box } from '@material-ui/core'\n\nimport { Sidebar } from '../components'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    const { user, history, dispatch } = this.props\n\n    const pathname = history.location.pathname\n    console.debug('[CApp] fn=constructor, window.location.pathname=', pathname)\n    if (user.isAuthed) {\n      if (pathname === '/signin' || pathname === '/register') {\n        if (pathname !== '/') history.replace('/')\n      } //else {\n      //history.replace('/dashboard')\n      //}\n    } else {\n      if (pathname !== '/signin') history.replace('/signin')\n    }\n\n    history.listen(() => {\n      // clear notifications on location change\n      dispatch(notificationActions.clear())\n    })\n  }\n  shouldComponentUpdate(nextProps) {\n    const locationChanged = nextProps.location !== this.props.location\n    console.debug(\n      `[CApp] fn=shouldComponentUpdate, locationChanged=${locationChanged}, nextProps.location=${nextProps.location.pathname}, this.props.location=${this.props.location.pathname}`\n    )\n    return (\n      locationChanged ||\n      nextProps.notifications.length !== this.props.notifications.length\n    )\n  }\n  render() {\n    console.debug('[CApp] fn=render')\n    const { notifications, user } = this.props\n    return (\n      <React.Fragment>\n        {user.isAuthed && <Sidebar {...this.props} />}\n        <Notifications\n          notifications={notifications}\n          className='notifications-lb'\n        />\n        <Container maxWidth='xl'>\n          <Box pt={8}>{this.props.children}</Box>\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n\nApp.propTypes = {\n  user: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  notifications: PropTypes.array.isRequired,\n  children: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n  const { notifications, user, loadingBar } = state\n  return { notifications, user, loadingBar }\n}\n\nconst connected = withRouter(connect(mapStateToProps)(App))\nexport { connected as App }\n","import { userConstants } from '../constants'\nimport { auth } from '../../helpers/auth'\n\nlet initialState = {\n  isAuthed: false\n}\ntry {\n  if (auth.isLogin())\n    initialState = {\n      isAuthed: true,\n      ...auth.getLoggedUser()\n    }\n} catch (err) {\n  console.debug('[USER_REDUCER] err=', err)\n}\n\nexport function user(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.SIGNIN_SUCCESS:\n      return {\n        isAuthed: true,\n        ...action.user\n      }\n    case userConstants.SIGNIN_FAILURE:\n      return {\n        isAuthed: false\n      }\n    case userConstants.SIGNOUT_SUCCESS:\n      return {\n        isAuthed: false\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { reducer as notifications } from 'react-notification-system-redux'\nimport { connectRouter } from 'connected-react-router'\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar'\n\nimport { user } from './userReducer'\n\nexport const createRootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    notifications,\n    loadingBar,\n    user,\n  })\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { routerMiddleware } from 'connected-react-router'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport { createRootReducer } from './reducers'\nimport { history } from '../helpers'\n\n// routerMiddleware = for dispatching history actions\nconst middlewares = [routerMiddleware(history), thunkMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger')\n  middlewares.push(logger)\n}\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst rootReducer = createRootReducer(history)\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const store = createStore(\n  persistedReducer, // new root reducer with router state\n  composeEnhancers(applyMiddleware(...middlewares))\n)\nexport const persistor = persistStore(store)\n","import React, { Component } from 'react'\n\nimport { Dashboard as CDashboard } from '../../components'\n\nclass Dashboard extends Component {\n  shouldComponentUpdate(nextProps, nextStates) {\n    return false\n  }\n\n  render() {\n    return (\n      <div className='content Dashboard'>\n        <CDashboard />\n      </div>\n    )\n  }\n}\n\nexport { Dashboard }\n","import React from 'react'\n\nimport { withAuthorization } from '../auth'\nimport { SignIn, SignOut, Register } from '../components'\nimport {\n  Dashboard,\n} from '../views'\n\nconst User = withAuthorization(['user'], { unauthorized: <div>403</div> }) // TODO\n\nexport const routePaths = [\n  {\n    name: 'Register',\n    path: '/register',\n    component: Register\n  },\n  {\n    name: 'SignIn',\n    path: '/signin',\n    component: SignIn\n  },\n  {\n    name: 'SignOut',\n    path: '/signout',\n    component: SignOut\n  },\n  {\n    name: 'Dashboard',\n    path: '/dashboard',\n    component: User(Dashboard),\n    exact: true,\n    needAuth: true\n  },\n]\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction withAuthorization(requirements, configs = {}) {\n  return function applyAuthFor(WrappableComponent) {\n    return class ComponentWithAuthorization extends Component {\n      static contextTypes = {\n        user: PropTypes.object,\n        authorize: PropTypes.func,\n        loggedOutRole: PropTypes.oneOfType([PropTypes.string, PropTypes.symbol])\n      }\n      render() {\n        const { unauthorized } = configs\n        const { user, authorize } = this.context\n\n        if (user && user.isAuthed && authorize(requirements, user)) {\n          return <WrappableComponent {...this.props} />\n        }\n\n        if (unauthorized) {\n          return unauthorized\n        }\n\n        return null\n      }\n    }\n  }\n}\n\nexport { withAuthorization }\n","import React from 'react'\nimport { Route, Switch } from 'react-router' // react-router v4\n\nimport { routePaths } from './paths'\n\nconst Routes = (\n  <Switch>\n    {routePaths.map((route, index) => (\n      <Route\n        key={index}\n        exact={route.exact}\n        strict={route.strict}\n        path={route.path}\n        component={route.component}\n      />\n    ))}\n    <Route render={() => 'Path not found'} />\n  </Switch>\n)\n\nexport default Routes\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { AuthProvider } from './auth'\nimport { App } from './containers/'\nimport { history, HttpRequest } from './helpers'\nimport { store, persistor } from './redux/store'\nimport { config } from './configs'\nimport Routes from './routes/index'\nimport registerServiceWorker from './registerServiceWorker'\n\nHttpRequest.setup({ ...config.apiGateway.server })\n\nconst authorize = (requirements, user) => {\n  return requirements.some(requirement => user.role === requirement)\n}\n\nrender(\n  <ReduxProvider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <AuthProvider authorize={authorize}>\n        <ConnectedRouter history={history}>\n          <App>{Routes}</App>\n        </ConnectedRouter>\n      </AuthProvider>\n    </PersistGate>\n  </ReduxProvider>,\n  document.querySelector('#root')\n)\nregisterServiceWorker()\n","module.exports = __webpack_public_path__ + \"static/media/fondo_login.2edd36ae.png\";","module.exports = __webpack_public_path__ + \"static/media/video_login.6aa92b25.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo_login.bc4c9aec.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-light.7dd2887f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.72dc0805.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_small.69def124.svg\";"],"sourceRoot":""}