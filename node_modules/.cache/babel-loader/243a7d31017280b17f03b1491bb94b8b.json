{"ast":null,"code":"import _regeneratorRuntime from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { multiLenguageConstants } from '../constants';\nimport { handlerErrorActions } from './handlers/handlerErrorActions';\n\nconst success = (type, data) => {\n  return {\n    type,\n    data\n  };\n};\n\nconst getSelectedLanguage = language => {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              dispatch(success(multiLenguageConstants, language));\n            } catch (err) {\n              dispatch(handlerErrorActions.handle(\"Error\"));\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport const selectedProjectActions = {\n  getSelectedLanguage\n};","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/redux/actions/multiLanguageActions.js"],"names":["multiLenguageConstants","handlerErrorActions","success","type","data","getSelectedLanguage","language","dispatch","err","handle","selectedProjectActions"],"mappings":";;AAAA,SAASA,sBAAT,QAAuC,cAAvC;AACA,SAASC,mBAAT,QAAoC,gCAApC;;AAIA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC9B,SAAO;AAAED,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACD,CAFD;;AAIA,MAAMC,mBAAmB,GAAIC,QAAD,IAAc;AACxC;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AACL,gBAAI;AACFA,cAAAA,QAAQ,CACNL,OAAO,CAACF,sBAAD,EAAyBM,QAAzB,CADD,CAAR;AAGD,aAJD,CAIE,OAAOE,GAAP,EAAY;AACZD,cAAAA,QAAQ,CAACN,mBAAmB,CAACQ,MAApB,CAA2B,OAA3B,CAAD,CAAR;AACD;;AAPI;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AASD,CAVD;;AAaA,OAAO,MAAMC,sBAAsB,GAAG;AACpCL,EAAAA;AADoC,CAA/B","sourcesContent":["import { multiLenguageConstants } from '../constants'\nimport { handlerErrorActions } from './handlers/handlerErrorActions'\n\n\n\nconst success = (type, data) => {\n  return { type, data }\n}\n\nconst getSelectedLanguage = (language) => {\n  return async dispatch => {\n    try {\n      dispatch(\n        success(multiLenguageConstants, language)\n      )\n    } catch (err) {\n      dispatch(handlerErrorActions.handle(\"Error\"))\n    }\n  }\n}\n\n\nexport const selectedProjectActions = {\n  getSelectedLanguage,\n}\n"]},"metadata":{},"sourceType":"module"}