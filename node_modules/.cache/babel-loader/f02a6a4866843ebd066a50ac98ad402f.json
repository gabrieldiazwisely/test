{"ast":null,"code":"import _objectSpread from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { AuthProvider } from './auth';\nimport { App } from './containers/';\nimport { history, HttpRequest } from './helpers';\nimport { store, persistor } from './redux/store';\nimport { config } from './configs';\nimport Routes from './routes/index';\nimport registerServiceWorker from './registerServiceWorker';\nHttpRequest.setup(_objectSpread({}, config.apiGateway.server));\n\nconst authorize = (requirements, user) => {\n  return requirements.some(requirement => user.role === requirement);\n};\n\nrender( /*#__PURE__*/React.createElement(ReduxProvider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  loading: null,\n  persistor: persistor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(AuthProvider, {\n  authorize: authorize,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(ConnectedRouter, {\n  history: history,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }\n}, Routes))))), document.querySelector('#root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/index.js"],"names":["React","render","Provider","ReduxProvider","ConnectedRouter","PersistGate","AuthProvider","App","history","HttpRequest","store","persistor","config","Routes","registerServiceWorker","setup","apiGateway","server","authorize","requirements","user","some","requirement","role","document","querySelector"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,aAA1C;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,eAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEAL,WAAW,CAACM,KAAZ,mBAAuBH,MAAM,CAACI,UAAP,CAAkBC,MAAzC;;AAEA,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAeC,IAAf,KAAwB;AACxC,SAAOD,YAAY,CAACE,IAAb,CAAkBC,WAAW,IAAIF,IAAI,CAACG,IAAL,KAAcD,WAA/C,CAAP;AACD,CAFD;;AAIArB,MAAM,eACJ,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAES,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,IAAtB;AAA4B,EAAA,SAAS,EAAEC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAEO,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,eAAD;AAAiB,EAAA,OAAO,EAAEV,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMK,MAAN,CADF,CADF,CADF,CADF,CADI,EAUJW,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAVI,CAAN;AAYAX,qBAAqB","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { AuthProvider } from './auth'\nimport { App } from './containers/'\nimport { history, HttpRequest } from './helpers'\nimport { store, persistor } from './redux/store'\nimport { config } from './configs'\nimport Routes from './routes/index'\nimport registerServiceWorker from './registerServiceWorker'\n\nHttpRequest.setup({ ...config.apiGateway.server })\n\nconst authorize = (requirements, user) => {\n  return requirements.some(requirement => user.role === requirement)\n}\n\nrender(\n  <ReduxProvider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <AuthProvider authorize={authorize}>\n        <ConnectedRouter history={history}>\n          <App>{Routes}</App>\n        </ConnectedRouter>\n      </AuthProvider>\n    </PersistGate>\n  </ReduxProvider>,\n  document.querySelector('#root')\n)\nregisterServiceWorker()\n"]},"metadata":{},"sourceType":"module"}