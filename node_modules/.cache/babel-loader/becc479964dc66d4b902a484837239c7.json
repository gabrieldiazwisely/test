{"ast":null,"code":"import _slicedToArray from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Common/MultiLanguage/MultiLanguage.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { multiLanguageActions } from '../../../redux/actions'\n\nimport { languageResults } from \"../../../redux/selectors\";\nimport PropTypes from \"prop-types\";\nimport { Button, Menu, MenuItem, Box } from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\n\nconst MultiLanguage = props => {\n  const dispatch = useDispatch(); // remover dispatch en handleClick!!!\n\n  const language = useSelector(state => languageResults(state));\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchor = _React$useState2[0],\n        setAnchor = _React$useState2[1];\n\n  const _React$useState3 = React.useState(language),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectLanguage = _React$useState4[0],\n        setSelectLanguage = _React$useState4[1];\n\n  useEffect(() => {// if(!language || selectLanguage) {\n    //   dispatch(multiLanguageActions.getSelectedLanguage(selectLanguage))\n    // }\n  }, [selectLanguage]);\n\n  const handleClick = event => {\n    dispatch();\n    setAnchor(event.currentTarget);\n  };\n\n  const onClickSelect = data => {\n    setSelectLanguage(data);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.options,\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TranslateIcon, {\n    style: {\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), \" \", selectLanguage), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchor,\n    keepMounted: true,\n    open: Boolean(anchor),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      onClickSelect(\"es\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"ESPA\\xD1OL\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      onClickSelect(\"en\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"ENGLISH\"))));\n};\n\nMultiLanguage.propTypes = {\n  items: PropTypes.array.isRequired\n};\nexport { MultiLanguage };","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Common/MultiLanguage/MultiLanguage.jsx"],"names":["React","useEffect","useDispatch","useSelector","languageResults","PropTypes","Button","Menu","MenuItem","Box","useStyles","TranslateIcon","MultiLanguage","props","dispatch","language","state","classes","useState","anchor","setAnchor","selectLanguage","setSelectLanguage","handleClick","event","currentTarget","onClickSelect","data","handleClose","options","marginRight","Boolean","propTypes","items","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,GAAjC,QAA4C,mBAA5C;AAEA,SAASC,SAAT,QAA0B,SAA1B;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CAD6B,CACG;;AAEhC,QAAMa,QAAQ,GAAGZ,WAAW,CAACa,KAAK,IAAIZ,eAAe,CAACY,KAAD,CAAzB,CAA5B;AAEA,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAL6B,0BAODV,KAAK,CAACkB,QAAN,CAAe,IAAf,CAPC;AAAA;AAAA,QAOtBC,MAPsB;AAAA,QAOdC,SAPc;;AAAA,2BAQepB,KAAK,CAACkB,QAAN,CAAeH,QAAf,CARf;AAAA;AAAA,QAQtBM,cARsB;AAAA,QAQNC,iBARM;;AAU7BrB,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACD,GAJQ,EAIN,CAACoB,cAAD,CAJM,CAAT;;AAMA,QAAME,WAAW,GAAGC,KAAK,IAAI;AAC3BV,IAAAA,QAAQ;AACRM,IAAAA,SAAS,CAACI,KAAK,CAACC,aAAP,CAAT;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAGC,IAAI,IAAI;AAC5BL,IAAAA,iBAAiB,CAACK,IAAD,CAAjB;AACAC,IAAAA,WAAW;AACZ,GAHD;;AAKA,QAAMA,WAAW,GAAG,MAAM;AACxBR,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACY,OADrB;AAEE,qBAAc,aAFhB;AAGE,qBAAc,MAHhB;AAIE,IAAA,OAAO,EAAEN,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEO,MAAAA,WAAW,EAAE;AAAf,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,OAMoDT,cANpD,CADF,eASE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,QAAQ,EAAEF,MAFZ;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,IAAI,EAAEY,OAAO,CAACZ,MAAD,CAJf;AAKE,IAAA,OAAO,EAAES,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAcE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,CATF,CADF,CADF;AAoCD,CAlED;;AAoEAd,aAAa,CAACoB,SAAd,GAA0B;AACxBC,EAAAA,KAAK,EAAE5B,SAAS,CAAC6B,KAAV,CAAgBC;AADC,CAA1B;AAIA,SAASvB,aAAT","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// import { multiLanguageActions } from '../../../redux/actions'\nimport { languageResults } from \"../../../redux/selectors\";\n\nimport PropTypes from \"prop-types\";\nimport { Button, Menu, MenuItem, Box } from \"@material-ui/core\";\n\nimport { useStyles } from \"./style\";\n\nimport TranslateIcon from \"@material-ui/icons/Translate\";\n\nconst MultiLanguage = props => {\n  const dispatch = useDispatch(); // remover dispatch en handleClick!!!\n\n  const language = useSelector(state => languageResults(state));\n\n  const classes = useStyles();\n\n  const [anchor, setAnchor] = React.useState(null);\n  const [selectLanguage, setSelectLanguage] = React.useState(language);\n\n  useEffect(() => {\n    // if(!language || selectLanguage) {\n    //   dispatch(multiLanguageActions.getSelectedLanguage(selectLanguage))\n    // }\n  }, [selectLanguage]);\n\n  const handleClick = event => {\n    dispatch();\n    setAnchor(event.currentTarget);\n  };\n\n  const onClickSelect = data => {\n    setSelectLanguage(data);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  return (\n    <React.Fragment>\n      <Box>\n        <Button\n          className={classes.options}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          <TranslateIcon style={{ marginRight: \"5px\" }} /> {selectLanguage}\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchor}\n          keepMounted\n          open={Boolean(anchor)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              onClickSelect(\"es\");\n            }}\n          >\n            ESPAÃ‘OL\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              onClickSelect(\"en\");\n            }}\n          >\n            ENGLISH\n          </MenuItem>\n        </Menu>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nMultiLanguage.propTypes = {\n  items: PropTypes.array.isRequired\n};\n\nexport { MultiLanguage };\n"]},"metadata":{},"sourceType":"module"}