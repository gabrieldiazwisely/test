{"ast":null,"code":"var _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/SignInForm.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, TextField, Button, Grid, Paper } from '@material-ui/core';\nimport { useStyles } from './style';\n\nconst SignInForm = props => {\n  const classes = useStyles();\n  const userNameError = props.userNameError,\n        username = props.username,\n        passwordError = props.passwordError,\n        password = props.password;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Idioma\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    style: {\n      display: 'flex',\n      width: '100%',\n      textAlign: 'center',\n      marginTop: '20px',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textInput,\n    placeholder: \"Username\",\n    error: userNameError,\n    id: \"user-name\",\n    label: \"Username\",\n    name: \"username\",\n    type: \"text\",\n    variant: \"outlined\",\n    value: username,\n    onChange: props.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textInput,\n    placeholder: \"Password\",\n    error: passwordError,\n    id: \"outlined-password-input\",\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    value: password,\n    onChange: props.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.submitButton,\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Ingresar\")))))));\n};\n\nSignInForm.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  userNameError: PropTypes.bool.isRequired,\n  username: PropTypes.string.isRequired,\n  passwordError: PropTypes.bool.isRequired,\n  password: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleCheckBoxChange: PropTypes.func.isRequired,\n  handleRedirect: PropTypes.func.isRequired\n};\nexport default SignInForm;","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/SignInForm.jsx"],"names":["React","PropTypes","FormGroup","TextField","Button","Grid","Paper","useStyles","SignInForm","props","classes","userNameError","username","passwordError","password","formContainer","handleSubmit","display","width","textAlign","marginTop","flexDirection","textInput","handleChange","submitButton","propTypes","checked","bool","isRequired","string","func","handleCheckBoxChange","handleRedirect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, TextField, Button, Grid, Paper } from '@material-ui/core'\nimport { useStyles } from './style'\n\nconst SignInForm = props => {\n  const classes = useStyles()\n  const { userNameError, username, passwordError, password } = props\n  return (\n    <React.Fragment>\n      <Grid container direction='row' justify='center'>\n        <Grid item>\n          Idioma  \n        </Grid>\n        <Grid item>\n            \n      <Paper className={classes.formContainer}>\n      <form\n        onSubmit={props.handleSubmit}\n        noValidate\n        autoComplete='off'\n        style={{\n          display: 'flex',\n          width: '100%',\n          textAlign: 'center',\n          marginTop: '20px',\n          flexDirection: 'column'\n        }}\n      >\n        <FormGroup row>\n          <TextField\n            className={classes.textInput}\n            placeholder='Username'\n            error={userNameError}\n            id='user-name'\n            label='Username'\n            name='username'\n            type='text'\n            variant='outlined'\n            value={username}\n            onChange={props.handleChange}\n            required\n          />\n        </FormGroup>\n        <FormGroup row>\n          <TextField\n            className={classes.textInput}\n            placeholder='Password'\n            error={passwordError}\n            id='outlined-password-input'\n            label='Password'\n            name='password'\n            type='password'\n            variant='outlined'\n            value={password}\n            onChange={props.handleChange}\n            required\n          />\n        </FormGroup>\n        <FormGroup row>\n          <Button\n            className={classes.submitButton}\n            type='submit'\n            variant='contained'\n          >\n            Ingresar\n          </Button>\n        </FormGroup>\n      </form>\n      </Paper>\n      </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nSignInForm.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  userNameError: PropTypes.bool.isRequired,\n  username: PropTypes.string.isRequired,\n  passwordError: PropTypes.bool.isRequired,\n  password: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleCheckBoxChange: PropTypes.func.isRequired,\n  handleRedirect: PropTypes.func.isRequired\n}\n\nexport default SignInForm\n"]},"metadata":{},"sourceType":"module"}