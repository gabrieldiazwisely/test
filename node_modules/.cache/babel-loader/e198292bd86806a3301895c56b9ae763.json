{"ast":null,"code":"import _slicedToArray from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Common/Scale/Scale.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BottomNavigation, Grid, Button, Menu, MenuItem, Box, Typography } from '@material-ui/core';\nimport { useStyles } from './style';\nimport TranslateIcon from '@material-ui/icons/Translate';\n\nconst MultiLanguage = props => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorTranslate = _React$useState2[0],\n        setAnchorTranslate = _React$useState2[1];\n\n  const handleClickTranslate = event => {\n    setAnchorTranslate(event.currentTarget);\n  };\n\n  const handleCloseTranslate = () => {\n    setAnchorTranslate(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.options,\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClickTranslate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TranslateIcon, {\n    style: {\n      marginRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), \" ESPA\\xD1OL\"), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorTranslate,\n    keepMounted: true,\n    open: Boolean(anchorTranslate),\n    onClose: handleCloseTranslate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleCloseTranslate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"ESPA\\xD1OL\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleCloseTranslate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"ENGLISH\"))));\n};\n\nMultiLanguage.propTypes = {\n  items: PropTypes.array.isRequired\n};\nexport { MultiLanguage };","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Common/Scale/Scale.jsx"],"names":["React","PropTypes","BottomNavigation","Grid","Button","Menu","MenuItem","Box","Typography","useStyles","TranslateIcon","MultiLanguage","props","classes","useState","anchorTranslate","setAnchorTranslate","handleClickTranslate","event","currentTarget","handleCloseTranslate","options","marginRight","Boolean","propTypes","items","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,gBAAR,EACIC,IADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,QAJJ,EAKIC,GALJ,EAMIC,UANJ,QAMqB,mBANrB;AAQA,SAASC,SAAT,QAA0B,SAA1B;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;;AAD6B,0BAGiBT,KAAK,CAACc,QAAN,CAAe,IAAf,CAHjB;AAAA;AAAA,QAGtBC,eAHsB;AAAA,QAGLC,kBAHK;;AAK7B,QAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtCF,IAAAA,kBAAkB,CAACE,KAAK,CAACC,aAAP,CAAlB;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,OAAO,CAACQ,OAA3B;AAAoC,qBAAc,aAAlD;AAAgE,qBAAc,MAA9E;AAAqF,IAAA,OAAO,EAAEJ,oBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAgB,IAAA,KAAK,EAAE;AAACK,MAAAA,WAAW,EAAE;AAAd,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,gBADJ,eAII,oBAAC,IAAD;AACA,IAAA,EAAE,EAAC,aADH;AAEA,IAAA,QAAQ,EAAEP,eAFV;AAGA,IAAA,WAAW,MAHX;AAIA,IAAA,IAAI,EAAEQ,OAAO,CAACR,eAAD,CAJb;AAKA,IAAA,OAAO,EAAEK,oBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,CAJJ,CADJ,CADF;AAmBD,CAhCD;;AAkCAT,aAAa,CAACa,SAAd,GAA0B;AACxBC,EAAAA,KAAK,EAAExB,SAAS,CAACyB,KAAV,CAAgBC;AADC,CAA1B;AAIA,SAAQhB,aAAR","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {BottomNavigation,\n    Grid,\n    Button,\n    Menu,\n    MenuItem,\n    Box,\n    Typography} from '@material-ui/core'\n\nimport { useStyles } from './style'\n\nimport TranslateIcon from '@material-ui/icons/Translate'\n\nconst MultiLanguage = props => {\n  const classes = useStyles()\n\n  const [anchorTranslate, setAnchorTranslate] = React.useState(null);\n  \n  const handleClickTranslate = (event) => {\n    setAnchorTranslate(event.currentTarget);\n  }\n\n  const handleCloseTranslate = () => {\n    setAnchorTranslate(null);\n  }\n\n  return(\n    <React.Fragment>\n        <Box>\n            <Button className={classes.options} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClickTranslate}>\n                <TranslateIcon  style={{marginRight: '5px'}} /> ESPAÑOL\n            </Button>\n            <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorTranslate}\n            keepMounted\n            open={Boolean(anchorTranslate)}\n            onClose={handleCloseTranslate}\n            >\n                <MenuItem onClick={handleCloseTranslate}>ESPAÑOL</MenuItem>\n                <MenuItem onClick={handleCloseTranslate}>ENGLISH</MenuItem>\n            </Menu>\n        </Box>\n    </React.Fragment>\n  )\n}\n\nMultiLanguage.propTypes = {\n  items: PropTypes.array.isRequired\n}\n\nexport {MultiLanguage}"]},"metadata":{},"sourceType":"module"}