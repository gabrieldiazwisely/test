{"ast":null,"code":"import _objectSpread from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { userConstants } from \"../constants\";\nimport { auth } from \"../../helpers/auth\";\nlet initialState = {\n  isAuthed: false\n};\n\ntry {\n  if (auth.isLogin()) initialState = _objectSpread({\n    isAuthed: true\n  }, auth.getLoggedUser());\n} catch (err) {\n  console.debug(\"[USER_REDUCER] err=\", err);\n}\n\nexport function user(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.SIGNIN_SUCCESS:\n      return _objectSpread({\n        isAuthed: true\n      }, action.user);\n\n    case userConstants.SIGNIN_FAILURE:\n      return {\n        isAuthed: false\n      };\n\n    case userConstants.SIGNOUT_SUCCESS:\n      return {\n        isAuthed: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/redux/reducers/userReducer.js"],"names":["userConstants","auth","initialState","isAuthed","isLogin","getLoggedUser","err","console","debug","user","state","action","type","SIGNIN_SUCCESS","SIGNIN_FAILURE","SIGNOUT_SUCCESS"],"mappings":";AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAAnB;;AAGA,IAAI;AACF,MAAIF,IAAI,CAACG,OAAL,EAAJ,EACEF,YAAY;AACVC,IAAAA,QAAQ,EAAE;AADA,KAEPF,IAAI,CAACI,aAAL,EAFO,CAAZ;AAIH,CAND,CAME,OAAOC,GAAP,EAAY;AACZC,EAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,GAArC;AACD;;AAED,OAAO,SAASG,IAAT,CAAcC,KAAK,GAAGR,YAAtB,EAAoCS,MAApC,EAA4C;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,aAAa,CAACa,cAAnB;AACE;AACEV,QAAAA,QAAQ,EAAE;AADZ,SAEKQ,MAAM,CAACF,IAFZ;;AAIF,SAAKT,aAAa,CAACc,cAAnB;AACE,aAAO;AACLX,QAAAA,QAAQ,EAAE;AADL,OAAP;;AAGF,SAAKH,aAAa,CAACe,eAAnB;AACE,aAAO;AACLZ,QAAAA,QAAQ,EAAE;AADL,OAAP;;AAGF;AACE,aAAOO,KAAP;AAfJ;AAiBD","sourcesContent":["import { userConstants } from \"../constants\";\nimport { auth } from \"../../helpers/auth\";\n\nlet initialState = {\n  isAuthed: false\n};\ntry {\n  if (auth.isLogin())\n    initialState = {\n      isAuthed: true,\n      ...auth.getLoggedUser()\n    };\n} catch (err) {\n  console.debug(\"[USER_REDUCER] err=\", err);\n}\n\nexport function user(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.SIGNIN_SUCCESS:\n      return {\n        isAuthed: true,\n        ...action.user\n      };\n    case userConstants.SIGNIN_FAILURE:\n      return {\n        isAuthed: false\n      };\n    case userConstants.SIGNOUT_SUCCESS:\n      return {\n        isAuthed: false\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}