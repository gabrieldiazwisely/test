{"ast":null,"code":"import _objectSpread from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/SignIn.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { userActions, notificationActions } from '../../redux/actions';\nimport SignInForm from './SignInForm';\nimport RightSideContent from './RightSideContent';\nimport Logo from \"../../assets/img/logo_login.svg\";\nconst initialState = {\n  username: '',\n  password: ''\n};\n\nclass SignIn extends Component {\n  constructor(props, context) {\n    super(props, context); // this.mqtt = new MQTT()\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      const dispatch = this.props.dispatch;\n      dispatch(notificationActions.clear());\n    };\n\n    this.handleCheckBoxChange = () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n\n    this.handleRedirect = () => {\n      console.log('should redirect');\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const dispatch = this.props.dispatch;\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n\n      if (this.state.username.length === 0) {\n        dispatch(notificationActions.error({\n          message: 'Invalid Username'\n        }));\n        this.setState({\n          userNameError: true\n        });\n        return;\n      } else {\n        this.setState({\n          userNameError: false\n        });\n      }\n\n      if (this.state.password.length === 0) {\n        dispatch(notificationActions.error({\n          message: 'Wrong Password'\n        }));\n        this.setState({\n          passwordError: true\n        });\n        return;\n      } else {\n        this.setState({\n          passwordError: false\n        });\n      }\n\n      dispatch(userActions.signin(username, password)).then(() => {}).catch(error => {\n        console.log(error);\n      });\n      this.setState(initialState);\n    };\n\n    this.state = _objectSpread(_objectSpread({}, this.props), {}, {\n      passwordError: false,\n      userNameError: false,\n      checked: false\n    });\n  }\n\n  componentDidMount() {\n    this.props.dispatch(notificationActions.clear());\n  }\n\n  render() {\n    // this.mqtt.unsubscribe('#')\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      sm: 5,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '80%',\n        textAlign: 'center',\n        margin: '0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"smart video logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '80%',\n        textAlign: 'center',\n        margin: '0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SignInForm, {\n      checked: this.state.checked,\n      userNameError: this.state.userNameError,\n      username: this.state.username,\n      passwordError: this.state.passwordError,\n      password: this.state.password,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleCheckBoxChange: this.handleCheckBoxChange,\n      handleRedirect: this.handleRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(RightSideContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSignIn.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nSignIn.defaultProps = _objectSpread({}, initialState);\nconst connected = connect()(SignIn);\nexport { connected as SignIn };","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/SignIn.jsx"],"names":["React","Component","connect","PropTypes","Grid","userActions","notificationActions","SignInForm","RightSideContent","initialState","username","password","SignIn","constructor","props","context","handleChange","event","setState","target","name","value","dispatch","clear","handleCheckBoxChange","checked","state","handleRedirect","console","log","handleSubmit","preventDefault","length","error","message","userNameError","passwordError","signin","then","catch","componentDidMount","render","width","textAlign","margin","Logo","propTypes","string","isRequired","func","defaultProps","connected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Grid } from '@material-ui/core'\nimport { userActions, notificationActions } from '../../redux/actions'\nimport SignInForm from './SignInForm'\nimport RightSideContent from './RightSideContent'\nimport Logo from '../../assets/img/logo_login.svg'\n\nconst initialState = {\n  username: '',\n  password: ''\n}\n\nclass SignIn extends Component {\n  constructor(props, context) {\n    super(props, context)\n    // this.mqtt = new MQTT()\n    this.state = {\n      ...this.props,\n      passwordError: false,\n      userNameError: false,\n      checked: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.dispatch(notificationActions.clear())\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n    const { dispatch } = this.props\n    dispatch(notificationActions.clear())\n  }\n\n  handleCheckBoxChange = () => {\n    this.setState({ checked: !this.state.checked })\n  }\n\n  handleRedirect = () => {\n    console.log('should redirect')\n  }\n\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { dispatch } = this.props\n    const { username, password } = this.state\n    if (this.state.username.length === 0) {\n      dispatch(notificationActions.error({ message: 'Invalid Username' }))\n      this.setState({ userNameError: true })\n      return\n    } else {\n      this.setState({ userNameError: false })\n    }\n    if (this.state.password.length === 0) {\n      dispatch(notificationActions.error({ message: 'Wrong Password' }))\n      this.setState({ passwordError: true })\n      return\n    } else {\n      this.setState({ passwordError: false })\n    }\n\n    dispatch(userActions.signin(username, password))\n      .then(() => {\n        \n      })\n      .catch(error => {\n        console.log(error)\n      })\n    this.setState(initialState)\n  }\n\n  render() {\n    // this.mqtt.unsubscribe('#')\n    return (\n      <Grid container direction='row' justify='center'>\n        <Grid\n          item\n          container\n          xs={12}\n          sm={5}\n          direction='row'\n          justify='center'\n          alignItems='center'\n        >\n          <div style={{ width: '100%' }}>\n            <div\n              style={{ width: '80%', textAlign: 'center', margin: '0 auto' }}\n            >\n              <img src={Logo} alt='smart video logo' />\n            </div>\n            <div\n              style={{ width: '80%', textAlign: 'center', margin: '0 auto' }}\n            >\n              <SignInForm\n                checked={this.state.checked}\n                userNameError={this.state.userNameError}\n                username={this.state.username}\n                passwordError={this.state.passwordError}\n                password={this.state.password}\n                handleSubmit={this.handleSubmit}\n                handleChange={this.handleChange}\n                handleCheckBoxChange={this.handleCheckBoxChange}\n                handleRedirect={this.handleRedirect}\n              />\n            </div>\n          </div>\n        </Grid>\n        <RightSideContent />\n      </Grid>\n    )\n  }\n}\n\nSignIn.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n}\n\nSignIn.defaultProps = {\n  ...initialState\n}\n\nconst connected = connect()(SignIn)\nexport { connected as SignIn }\n"]},"metadata":{},"sourceType":"module"}