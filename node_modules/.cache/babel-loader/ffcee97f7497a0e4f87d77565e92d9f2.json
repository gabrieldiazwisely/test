{"ast":null,"code":"import _slicedToArray from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Sidebar/Alerts.jsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { useStyles } from './style'; // import { alertsActions } from '../../redux/actions'\n\nimport AlertResult from './AlertResult';\nimport { IconButton, Badge, Menu, MenuItem, Grid, Tooltip, CircularProgress } from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nconst Alerts = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        flag = _React$useState2[0],\n        setFlag = _React$useState2[1];\n\n  const channel = '/api/updates';\n  const alerts = useSelector(state => {\n    return state.alerts.sidebar;\n  });\n  useEffect(() => {\n    if (flag || !alerts) {\n      setFlag(false); // dispatch(alertsActions.getAllSidebar('?limit=0'))\n\n      console.log('%c useEffect', 'background:red; color: #adadad;');\n    }\n  }, [alerts]);\n\n  const renderAlerts = () => {\n    return alerts.data.map((value, index) => /*#__PURE__*/React.createElement(AlertResult, Object.assign({\n      key: index\n    }, value, {\n      handleClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const renderActions = () => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      className: classes.removeOver,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Mark All as Read\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"#\",\n      key: \"markAll\",\n      onClick: handleClickMarkAll,\n      style: {\n        marginRight: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DoneAllIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Show All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/alerts\",\n      key: \"alerts\",\n      as: Link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MoreHorizIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }))))));\n  };\n\n  const handleClickMarkAll = () => {// dispatch(alertsActions.getAllSidebar('?limit=10&markall=1'))\n  };\n\n  const _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        anchorEl = _React$useState4[0],\n        setAnchorEl = _React$useState4[1];\n\n  const handleClick = event => {\n    handleSortAlerts();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSortAlerts = () => {// dispatch(alertsActions.getAllSidebar('?limit=10'))\n  };\n\n  const renderProgress = () => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      className: classes.progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    className: classes.NavAlert,\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: alerts.unread,\n    color: \"secondary\",\n    className: clsx(classes.NavAlertBadge, 'badgeRef'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    style: {\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorEl,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, renderActions(), renderAlerts(), renderProgress()));\n};\n\nexport default Alerts;","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Sidebar/Alerts.jsx"],"names":["React","useEffect","useDispatch","useSelector","NavLink","Link","clsx","useStyles","AlertResult","IconButton","Badge","Menu","MenuItem","Grid","Tooltip","CircularProgress","NotificationsIcon","MoreHorizIcon","DoneAllIcon","Alerts","classes","dispatch","useState","flag","setFlag","channel","alerts","state","sidebar","console","log","renderAlerts","data","map","value","index","handleClose","renderActions","removeOver","handleClickMarkAll","marginRight","anchorEl","setAnchorEl","handleClick","event","handleSortAlerts","currentTarget","renderProgress","progress","NavAlert","unread","NavAlertBadge","fontSize","vertical","horizontal","Boolean"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink, Link } from 'react-router-dom'\nimport clsx from 'clsx'\nimport { useStyles } from './style'\n// import { alertsActions } from '../../redux/actions'\nimport AlertResult from './AlertResult'\n\n\nimport {\n  IconButton,\n  Badge,\n  Menu,\n  MenuItem,\n  Grid,\n  Tooltip,\n  CircularProgress\n} from '@material-ui/core'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\n\nconst Alerts = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const [flag, setFlag] = React.useState(true)\n\n  const channel = '/api/updates'\n  const alerts = useSelector(state => {\n    return state.alerts.sidebar\n  })\n\n  \n\n  useEffect(() => {\n    if (flag || !alerts) {\n      setFlag(false)\n      // dispatch(alertsActions.getAllSidebar('?limit=0'))\n      console.log('%c useEffect', 'background:red; color: #adadad;')\n    }\n  }, [alerts])\n\n  const renderAlerts = () => {\n    return alerts.data.map((value, index) => (\n      <AlertResult key={index} {...value} handleClose={handleClose} />\n    ))\n  }\n\n  const renderActions = () => {\n    return (\n      <MenuItem className={classes.removeOver}>\n        <Grid container direction='row' justify='flex-end' alignItems='center'>\n          <Grid item>\n            <Tooltip title='Mark All as Read'>\n              <NavLink\n                to='#'\n                key='markAll'\n                onClick={handleClickMarkAll}\n                style={{ marginRight: '15px' }}\n              >\n                <DoneAllIcon />\n              </NavLink>\n            </Tooltip>\n            <Tooltip title='Show All'>\n              <NavLink to='/alerts' key='alerts' as={Link}>\n                <MoreHorizIcon />\n              </NavLink>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </MenuItem>\n    )\n  }\n\n  const handleClickMarkAll = () => {\n    // dispatch(alertsActions.getAllSidebar('?limit=10&markall=1'))\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const handleClick = event => {\n    handleSortAlerts()\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleSortAlerts = () => {\n    // dispatch(alertsActions.getAllSidebar('?limit=10'))\n  }\n\n  const renderProgress = () => {\n    return (\n      <MenuItem className={classes.progress}>\n        <CircularProgress size={25} />\n      </MenuItem>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <IconButton\n        color='inherit'\n        className={classes.NavAlert}\n        aria-controls='simple-menu'\n        aria-haspopup='true'\n        onClick={handleClick}\n      >\n        <Badge\n          badgeContent={alerts.unread}\n          color='secondary'\n          className={clsx(classes.NavAlertBadge, 'badgeRef')}\n        >\n          <NotificationsIcon style={{ fontSize: 30 }} />\n        </Badge>\n      </IconButton>\n      <Menu\n        id='menu-appbar'\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {renderActions()}\n        {renderAlerts()}\n        {renderProgress()}\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nexport default Alerts\n"]},"metadata":{},"sourceType":"module"}