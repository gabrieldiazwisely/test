{"ast":null,"code":"import _slicedToArray from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Common/MultiLanguage/MultiLanguage.jsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { multiLanguageActions } from '../../../redux/actions';\nimport { languageResults } from '../../../redux/selectors';\nimport PropTypes from 'prop-types';\nimport { Button, Menu, MenuItem, Box } from '@material-ui/core';\nimport { useStyles } from './style';\nimport TranslateIcon from '@material-ui/icons/Translate';\n\nconst MultiLanguage = props => {\n  const dispatch = useDispatch();\n  const language = useSelector(state => languageResults(state));\n  const classes = useStyles();\n  useEffect(() => {});\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchor = _React$useState2[0],\n        setAnchor = _React$useState2[1];\n\n  const handleClick = event => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.options,\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TranslateIcon, {\n    style: {\n      marginRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), \" \", anchor), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchor,\n    keepMounted: true,\n    open: Boolean(anchor),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"ESPA\\xD1OL\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"ENGLISH\"))));\n};\n\nMultiLanguage.propTypes = {\n  items: PropTypes.array.isRequired\n};\nexport { MultiLanguage };","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Common/MultiLanguage/MultiLanguage.jsx"],"names":["React","useEffect","useDispatch","useSelector","multiLanguageActions","languageResults","PropTypes","Button","Menu","MenuItem","Box","useStyles","TranslateIcon","MultiLanguage","props","dispatch","language","state","classes","useState","anchor","setAnchor","handleClick","event","currentTarget","handleClose","options","marginRight","Boolean","propTypes","items","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,QAHJ,EAIIC,GAJJ,QAIc,mBAJd;AAMA,SAASC,SAAT,QAA0B,SAA1B;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE7B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,QAAQ,GAAGb,WAAW,CAACc,KAAK,IAAIZ,eAAe,CAACY,KAAD,CAAzB,CAA5B;AAEA,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEAV,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;;AAR6B,0BAYDD,KAAK,CAACmB,QAAN,CAAe,IAAf,CAZC;AAAA;AAAA,QAYtBC,MAZsB;AAAA,QAYdC,SAZc;;AAc7B,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,SAAS,CAACE,KAAK,CAACC,aAAP,CAAT;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,OAAO,CAACQ,OAA3B;AAAoC,qBAAc,aAAlD;AAAgE,qBAAc,MAA9E;AAAqF,IAAA,OAAO,EAAEJ,WAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAgB,IAAA,KAAK,EAAE;AAACK,MAAAA,WAAW,EAAE;AAAd,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OACqDP,MADrD,CADJ,eAII,oBAAC,IAAD;AACA,IAAA,EAAE,EAAC,aADH;AAEA,IAAA,QAAQ,EAAEA,MAFV;AAGA,IAAA,WAAW,MAHX;AAIA,IAAA,IAAI,EAAEQ,OAAO,CAACR,MAAD,CAJb;AAKA,IAAA,OAAO,EAAEK,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,CAJJ,CADJ,CADF;AAmBD,CAzCD;;AA2CAZ,aAAa,CAACgB,SAAd,GAA0B;AACxBC,EAAAA,KAAK,EAAExB,SAAS,CAACyB,KAAV,CAAgBC;AADC,CAA1B;AAIA,SAAQnB,aAAR","sourcesContent":["import React, { useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { multiLanguageActions } from '../../../redux/actions'\nimport { languageResults } from '../../../redux/selectors'\n\nimport PropTypes from 'prop-types'\nimport {\n    Button,\n    Menu,\n    MenuItem,\n    Box} from '@material-ui/core'\n\nimport { useStyles } from './style'\n\nimport TranslateIcon from '@material-ui/icons/Translate'\n\nconst MultiLanguage = props => {  \n\n  const dispatch = useDispatch()\n\n  const language = useSelector(state => languageResults(state))\n\n  const classes = useStyles()\n\n  useEffect(() => {\n\n  })\n\n  const [anchor, setAnchor] = React.useState(null);\n  \n  const handleClick = (event) => {\n    setAnchor(event.currentTarget);\n  }\n\n  const handleClose = () => {\n    setAnchor(null);\n  }\n\n  return(\n    <React.Fragment>\n        <Box>\n            <Button className={classes.options} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <TranslateIcon  style={{marginRight: '5px'}} /> {anchor}\n            </Button>\n            <Menu\n            id=\"simple-menu\"\n            anchorEl={anchor}\n            keepMounted\n            open={Boolean(anchor)}\n            onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>ESPAÃ‘OL</MenuItem>\n                <MenuItem onClick={handleClose}>ENGLISH</MenuItem>\n            </Menu>\n        </Box>\n    </React.Fragment>\n  )\n}\n\nMultiLanguage.propTypes = {\n  items: PropTypes.array.isRequired\n}\n\nexport {MultiLanguage}"]},"metadata":{},"sourceType":"module"}