{"ast":null,"code":"import _objectSpread from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/SignIn.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Hidden } from \"@material-ui/core\";\nimport { userActions, notificationActions } from \"../../redux/actions\";\nimport SignInForm from \"./SignInForm\";\nimport LogoElecmetal from \"../../assets/img/logo-elecmetal-login.png\";\nimport LogoCrushing from \"../../assets/img/logo-crushing.png\";\nconst initialState = {\n  username: \"\",\n  password: \"\"\n};\n\nclass SignIn extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      const dispatch = this.props.dispatch;\n      dispatch(notificationActions.clear());\n    };\n\n    this.handleCheckBoxChange = () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n\n    this.handleRedirect = () => {\n      console.log(\"should redirect\");\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const dispatch = this.props.dispatch;\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n\n      if (this.state.username.length === 0) {\n        dispatch(notificationActions.error({\n          message: \"Invalid Username\"\n        }));\n        this.setState({\n          userNameError: true\n        });\n        return;\n      } else {\n        this.setState({\n          userNameError: false\n        });\n      }\n\n      if (this.state.password.length === 0) {\n        dispatch(notificationActions.error({\n          message: \"Wrong Password\"\n        }));\n        this.setState({\n          passwordError: true\n        });\n        return;\n      } else {\n        this.setState({\n          passwordError: false\n        });\n      }\n\n      dispatch(userActions.signin(username, password)).then(() => {}).catch(error => {\n        console.log(error);\n      });\n      this.setState(initialState);\n    };\n\n    this.state = _objectSpread(_objectSpread({}, this.props), {}, {\n      passwordError: false,\n      userNameError: false,\n      checked: false,\n      height: window.innerHeight\n    });\n  }\n\n  componentDidMount() {\n    this.props.dispatch(notificationActions.clear());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 3,\n      style: {\n        height: this.state.height - 90,\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo-crushing\",\n      src: LogoCrushing,\n      alt: \"Crushing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      md: 6,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"baseline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo-elecmetal\",\n      src: LogoElecmetal,\n      alt: \"Elecmetal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SignInForm, {\n      checked: this.state.checked,\n      userNameError: this.state.userNameError,\n      username: this.state.username,\n      passwordError: this.state.passwordError,\n      password: this.state.password,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleCheckBoxChange: this.handleCheckBoxChange,\n      handleRedirect: this.handleRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \" \"))));\n  }\n\n}\n\nSignIn.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nSignIn.defaultProps = _objectSpread({}, initialState);\nconst connected = connect()(SignIn);\nexport { connected as SignIn };","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/SignIn.jsx"],"names":["React","Component","connect","PropTypes","Grid","Hidden","userActions","notificationActions","SignInForm","LogoElecmetal","LogoCrushing","initialState","username","password","SignIn","constructor","props","context","handleChange","event","setState","target","name","value","dispatch","clear","handleCheckBoxChange","checked","state","handleRedirect","console","log","handleSubmit","preventDefault","length","error","message","userNameError","passwordError","signin","then","catch","height","window","innerHeight","componentDidMount","render","position","propTypes","string","isRequired","func","defaultProps","connected"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Hidden } from \"@material-ui/core\";\nimport { userActions, notificationActions } from \"../../redux/actions\";\nimport SignInForm from \"./SignInForm\";\nimport LogoElecmetal from \"../../assets/img/logo-elecmetal-login.png\";\nimport LogoCrushing from \"../../assets/img/logo-crushing.png\";\n\nconst initialState = {\n  username: \"\",\n  password: \"\"\n};\n\nclass SignIn extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      ...this.props,\n      passwordError: false,\n      userNameError: false,\n      checked: false,\n      height: window.innerHeight\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(notificationActions.clear());\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    const { dispatch } = this.props;\n    dispatch(notificationActions.clear());\n  };\n\n  handleCheckBoxChange = () => {\n    this.setState({ checked: !this.state.checked });\n  };\n\n  handleRedirect = () => {\n    console.log(\"should redirect\");\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { username, password } = this.state;\n    if (this.state.username.length === 0) {\n      dispatch(notificationActions.error({ message: \"Invalid Username\" }));\n      this.setState({ userNameError: true });\n      return;\n    } else {\n      this.setState({ userNameError: false });\n    }\n    if (this.state.password.length === 0) {\n      dispatch(notificationActions.error({ message: \"Wrong Password\" }));\n      this.setState({ passwordError: true });\n      return;\n    } else {\n      this.setState({ passwordError: false });\n    }\n\n    dispatch(userActions.signin(username, password))\n      .then(() => {})\n      .catch(error => {\n        console.log(error);\n      });\n    this.setState(initialState);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Grid container direction=\"row\" justify=\"center\">\n          <Hidden smDown>\n            <Grid\n              item\n              md={3}\n              style={{ height: this.state.height - 90, position: \"relative\" }}\n            >\n              <img\n                className={\"logo-crushing\"}\n                src={LogoCrushing}\n                alt=\"Crushing\"\n              />\n            </Grid>\n          </Hidden>\n          <Grid\n            item\n            container\n            xs={12}\n            md={6}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"baseline\"\n          >\n            <img\n              className={\"logo-elecmetal\"}\n              src={LogoElecmetal}\n              alt=\"Elecmetal\"\n            />\n\n            <SignInForm\n              checked={this.state.checked}\n              userNameError={this.state.userNameError}\n              username={this.state.username}\n              passwordError={this.state.passwordError}\n              password={this.state.password}\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n              handleCheckBoxChange={this.handleCheckBoxChange}\n              handleRedirect={this.handleRedirect}\n            />\n          </Grid>\n          <Hidden smDown>\n            <Grid item md={3}>\n              {\" \"}\n            </Grid>\n          </Hidden>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nSignIn.defaultProps = {\n  ...initialState\n};\n\nconst connected = connect()(SignIn);\nexport { connected as SignIn };\n"]},"metadata":{},"sourceType":"module"}