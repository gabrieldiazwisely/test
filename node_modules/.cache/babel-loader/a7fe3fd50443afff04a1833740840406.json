{"ast":null,"code":"import Notifications from 'react-notification-system-redux';\nexport const notificationActions = {\n  success,\n  error,\n  warning,\n  info,\n  hide,\n  clear\n};\nconst notification = {\n  title: '',\n  message: '',\n  position: 'tr',\n  autoDismiss: ''\n};\n\nfunction success({\n  uid,\n  message\n}) {\n  notification.uid = uid || _getRandomId();\n  notification.title = 'Success';\n  notification.message = message;\n  return dispatch => {\n    dispatch(Notifications.success(notification));\n  };\n}\n\nfunction error({\n  uid,\n  message\n}) {\n  notification.uid = uid || _getRandomId();\n  notification.title = 'Error';\n  notification.message = message;\n  return dispatch => {\n    dispatch(Notifications.error(notification));\n  };\n}\n\nfunction warning({\n  uid,\n  message\n}) {\n  notification.uid = uid || _getRandomId();\n  notification.title = 'Warning';\n  notification.message = message;\n  return dispatch => {\n    dispatch(Notifications.warning(notification));\n  };\n}\n\nfunction info({\n  uid,\n  message\n}) {\n  notification.uid = uid || _getRandomId();\n  notification.title = 'Info';\n  notification.message = message;\n  return dispatch => {\n    dispatch(Notifications.info(notification));\n  };\n}\n\nfunction hide(uid) {\n  return dispatch => {\n    dispatch(Notifications.hide(uid));\n  };\n}\n\nfunction clear() {\n  return dispatch => {\n    dispatch(Notifications.removeAll());\n  };\n}\n\nfunction _getRandomId() {\n  return Math.random().toString(36).substring(2);\n}","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/redux/actions/notificationActions.js"],"names":["Notifications","notificationActions","success","error","warning","info","hide","clear","notification","title","message","position","autoDismiss","uid","_getRandomId","dispatch","removeAll","Math","random","toString","substring"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iCAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG;AACjCC,EAAAA,OADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,OAHiC;AAIjCC,EAAAA,IAJiC;AAKjCC,EAAAA,IALiC;AAMjCC,EAAAA;AANiC,CAA5B;AASP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,QAAQ,EAAE,IAHS;AAInBC,EAAAA,WAAW,EAAE;AAJM,CAArB;;AAOA,SAASV,OAAT,CAAiB;AAAEW,EAAAA,GAAF;AAAOH,EAAAA;AAAP,CAAjB,EAAmC;AACjCF,EAAAA,YAAY,CAACK,GAAb,GAAmBA,GAAG,IAAIC,YAAY,EAAtC;AACAN,EAAAA,YAAY,CAACC,KAAb,GAAqB,SAArB;AACAD,EAAAA,YAAY,CAACE,OAAb,GAAuBA,OAAvB;AACA,SAAOK,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACf,aAAa,CAACE,OAAd,CAAsBM,YAAtB,CAAD,CAAR;AACD,GAFD;AAGD;;AAED,SAASL,KAAT,CAAe;AAAEU,EAAAA,GAAF;AAAOH,EAAAA;AAAP,CAAf,EAAiC;AAC/BF,EAAAA,YAAY,CAACK,GAAb,GAAmBA,GAAG,IAAIC,YAAY,EAAtC;AACAN,EAAAA,YAAY,CAACC,KAAb,GAAqB,OAArB;AACAD,EAAAA,YAAY,CAACE,OAAb,GAAuBA,OAAvB;AACA,SAAOK,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACf,aAAa,CAACG,KAAd,CAAoBK,YAApB,CAAD,CAAR;AACD,GAFD;AAGD;;AAED,SAASJ,OAAT,CAAiB;AAAES,EAAAA,GAAF;AAAOH,EAAAA;AAAP,CAAjB,EAAmC;AACjCF,EAAAA,YAAY,CAACK,GAAb,GAAmBA,GAAG,IAAIC,YAAY,EAAtC;AACAN,EAAAA,YAAY,CAACC,KAAb,GAAqB,SAArB;AACAD,EAAAA,YAAY,CAACE,OAAb,GAAuBA,OAAvB;AACA,SAAOK,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACf,aAAa,CAACI,OAAd,CAAsBI,YAAtB,CAAD,CAAR;AACD,GAFD;AAGD;;AAED,SAASH,IAAT,CAAc;AAAEQ,EAAAA,GAAF;AAAOH,EAAAA;AAAP,CAAd,EAAgC;AAC9BF,EAAAA,YAAY,CAACK,GAAb,GAAmBA,GAAG,IAAIC,YAAY,EAAtC;AACAN,EAAAA,YAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,EAAAA,YAAY,CAACE,OAAb,GAAuBA,OAAvB;AACA,SAAOK,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACf,aAAa,CAACK,IAAd,CAAmBG,YAAnB,CAAD,CAAR;AACD,GAFD;AAGD;;AAED,SAASF,IAAT,CAAcO,GAAd,EAAmB;AACjB,SAAOE,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACf,aAAa,CAACM,IAAd,CAAmBO,GAAnB,CAAD,CAAR;AACD,GAFD;AAGD;;AAED,SAASN,KAAT,GAAiB;AACf,SAAOQ,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACf,aAAa,CAACgB,SAAd,EAAD,CAAR;AACD,GAFD;AAGD;;AAED,SAASF,YAAT,GAAwB;AACtB,SAAOG,IAAI,CAACC,MAAL,GACJC,QADI,CACK,EADL,EAEJC,SAFI,CAEM,CAFN,CAAP;AAGD","sourcesContent":["import Notifications from 'react-notification-system-redux'\n\nexport const notificationActions = {\n  success,\n  error,\n  warning,\n  info,\n  hide,\n  clear\n}\n\nconst notification = {\n  title: '',\n  message: '',\n  position: 'tr',\n  autoDismiss: ''\n}\n\nfunction success({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Success'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.success(notification))\n  }\n}\n\nfunction error({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Error'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.error(notification))\n  }\n}\n\nfunction warning({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Warning'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.warning(notification))\n  }\n}\n\nfunction info({ uid, message }) {\n  notification.uid = uid || _getRandomId()\n  notification.title = 'Info'\n  notification.message = message\n  return dispatch => {\n    dispatch(Notifications.info(notification))\n  }\n}\n\nfunction hide(uid) {\n  return dispatch => {\n    dispatch(Notifications.hide(uid))\n  }\n}\n\nfunction clear() {\n  return dispatch => {\n    dispatch(Notifications.removeAll())\n  }\n}\n\nfunction _getRandomId() {\n  return Math.random()\n    .toString(36)\n    .substring(2)\n}\n"]},"metadata":{},"sourceType":"module"}