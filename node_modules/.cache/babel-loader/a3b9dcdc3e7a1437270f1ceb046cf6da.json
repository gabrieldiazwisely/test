{"ast":null,"code":"import _objectSpread from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/ForgotPassword.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid, Hidden } from '@material-ui/core';\nimport { userActions, notificationActions } from '../../redux/actions';\nimport ForgotPasswordForm from './ForgotPasswordForm';\nimport LogoElecmetal from '../../assets/img/logo-elecmetal.png';\nimport LogoCrushing from '../../assets/img/logo-crushing.png';\nconst initialState = {\n  username: ''\n};\n\nclass ForgotPassword extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      const dispatch = this.props.dispatch;\n      dispatch(notificationActions.clear());\n    };\n\n    this.handleCheckBoxChange = () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n\n    this.handleRedirect = () => {\n      console.log('should redirect');\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const dispatch = this.props.dispatch;\n      const username = this.state.username;\n\n      if (this.state.username.length === 0) {\n        dispatch(notificationActions.error({\n          message: 'Invalid Username'\n        }));\n        this.setState({\n          userNameError: true\n        });\n        return;\n      } else {\n        this.setState({\n          userNameError: false\n        });\n      }\n\n      dispatch(userActions.forgotpassword(username)).then(() => {}).catch(error => {\n        console.log(error);\n      });\n      this.setState(initialState);\n    };\n\n    this.state = _objectSpread(_objectSpread({}, this.props), {}, {\n      userNameError: false,\n      checked: false,\n      height: window.innerHeight\n    });\n  }\n\n  componentDidMount() {\n    this.props.dispatch(notificationActions.clear());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 3,\n      style: {\n        height: this.state.height - 90,\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: 'logo-crushing',\n      src: LogoCrushing,\n      alt: \"Crushing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      md: 6,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"baseline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: 'logo-elecmetal',\n      src: LogoElecmetal,\n      alt: \"Elecmetal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ForgotPasswordForm, {\n      checked: this.state.checked,\n      userNameError: this.state.userNameError,\n      username: this.state.username,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleCheckBoxChange: this.handleCheckBoxChange,\n      handleRedirect: this.handleRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"  \"))));\n  }\n\n}\n\nForgotPassword.propTypes = {\n  username: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nForgotPassword.defaultProps = _objectSpread({}, initialState);\nconst connected = connect()(ForgotPassword);\nexport { connected as ForgotPassword };","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/SignIn/ForgotPassword.jsx"],"names":["React","Component","connect","PropTypes","Grid","Hidden","userActions","notificationActions","ForgotPasswordForm","LogoElecmetal","LogoCrushing","initialState","username","ForgotPassword","constructor","props","context","handleChange","event","setState","target","name","value","dispatch","clear","handleCheckBoxChange","checked","state","handleRedirect","console","log","handleSubmit","preventDefault","length","error","message","userNameError","forgotpassword","then","catch","height","window","innerHeight","componentDidMount","render","position","propTypes","string","isRequired","func","defaultProps","connected"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,qBAAjD;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAIA,MAAMC,cAAN,SAA6BZ,SAA7B,CAAuC;AACrCa,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;;AAD0B,SAc5BC,YAd4B,GAcbC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAApC,OAAd;AADsB,YAEdC,QAFc,GAED,KAAKR,KAFJ,CAEdQ,QAFc;AAGtBA,MAAAA,QAAQ,CAAChB,mBAAmB,CAACiB,KAApB,EAAD,CAAR;AACD,KAlB2B;;AAAA,SAoB5BC,oBApB4B,GAoBL,MAAM;AAC3B,WAAKN,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAvB,OAAd;AACD,KAtB2B;;AAAA,SAwB5BE,cAxB4B,GAwBX,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KA1B2B;;AAAA,SA6B5BC,YA7B4B,GA6Bbb,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACc,cAAN;AADsB,YAEdT,QAFc,GAED,KAAKR,KAFJ,CAEdQ,QAFc;AAAA,YAGdX,QAHc,GAGD,KAAKe,KAHJ,CAGdf,QAHc;;AAItB,UAAI,KAAKe,KAAL,CAAWf,QAAX,CAAoBqB,MAApB,KAA+B,CAAnC,EAAsC;AACpCV,QAAAA,QAAQ,CAAChB,mBAAmB,CAAC2B,KAApB,CAA0B;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAA1B,CAAD,CAAR;AACA,aAAKhB,QAAL,CAAc;AAAEiB,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACA;AACD,OAJD,MAIO;AACL,aAAKjB,QAAL,CAAc;AAAEiB,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD;;AAEDb,MAAAA,QAAQ,CAACjB,WAAW,CAAC+B,cAAZ,CAA2BzB,QAA3B,CAAD,CAAR,CACG0B,IADH,CACQ,MAAM,CAEX,CAHH,EAIGC,KAJH,CAISL,KAAK,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,OANH;AAOA,WAAKf,QAAL,CAAcR,YAAd;AACD,KAjD2B;;AAE1B,SAAKgB,KAAL,mCACK,KAAKZ,KADV;AAEEqB,MAAAA,aAAa,EAAE,KAFjB;AAGEV,MAAAA,OAAO,EAAE,KAHX;AAIEc,MAAAA,MAAM,EAAEC,MAAM,CAACC;AAJjB;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK5B,KAAL,CAAWQ,QAAX,CAAoBhB,mBAAmB,CAACiB,KAApB,EAApB;AACD;;AAuCDoB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,OAAO,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAE;AAACJ,QAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWa,MAAX,GAAoB,EAA7B;AAAiCK,QAAAA,QAAQ,EAAE;AAA3C,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAiC,MAAA,GAAG,EAAEnC,YAAtC;AAAoD,MAAA,GAAG,EAAC,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADA,eAME,oBAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,SAAS,EAAC,KALZ;AAME,MAAA,OAAO,EAAC,QANV;AAOE,MAAA,UAAU,EAAC,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAkC,MAAA,GAAG,EAAED,aAAvC;AAAsD,MAAA,GAAG,EAAC,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAYE,oBAAC,kBAAD;AACE,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWD,OADtB;AAEE,MAAA,aAAa,EAAE,KAAKC,KAAL,CAAWS,aAF5B;AAGE,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWf,QAHvB;AAIE,MAAA,YAAY,EAAE,KAAKmB,YAJrB;AAKE,MAAA,YAAY,EAAE,KAAKd,YALrB;AAME,MAAA,oBAAoB,EAAE,KAAKQ,oBAN7B;AAOE,MAAA,cAAc,EAAE,KAAKG,cAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CANF,eA4BE,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA5BF,CADF,CADF;AAoCD;;AAzFoC;;AA4FvCf,cAAc,CAACiC,SAAf,GAA2B;AACzBlC,EAAAA,QAAQ,EAAET,SAAS,CAAC4C,MAAV,CAAiBC,UADF;AAEzBzB,EAAAA,QAAQ,EAAEpB,SAAS,CAAC8C,IAAV,CAAeD;AAFA,CAA3B;AAKAnC,cAAc,CAACqC,YAAf,qBACKvC,YADL;AAIA,MAAMwC,SAAS,GAAGjD,OAAO,GAAGW,cAAH,CAAzB;AACA,SAASsC,SAAS,IAAItC,cAAtB","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Grid, Hidden } from '@material-ui/core'\nimport { userActions, notificationActions } from '../../redux/actions'\nimport ForgotPasswordForm from './ForgotPasswordForm'\nimport LogoElecmetal from '../../assets/img/logo-elecmetal.png'\nimport LogoCrushing from '../../assets/img/logo-crushing.png'\n\nconst initialState = {\n  username: ''\n}\n\nclass ForgotPassword extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      ...this.props,\n      userNameError: false,\n      checked: false,\n      height: window.innerHeight\n    }\n  }\n\n  componentDidMount() {\n    this.props.dispatch(notificationActions.clear())\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n    const { dispatch } = this.props\n    dispatch(notificationActions.clear())\n  }\n\n  handleCheckBoxChange = () => {\n    this.setState({ checked: !this.state.checked })\n  }\n\n  handleRedirect = () => {\n    console.log('should redirect')\n  }\n\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { dispatch } = this.props\n    const { username } = this.state\n    if (this.state.username.length === 0) {\n      dispatch(notificationActions.error({ message: 'Invalid Username' }))\n      this.setState({ userNameError: true })\n      return\n    } else {\n      this.setState({ userNameError: false })\n    }\n\n    dispatch(userActions.forgotpassword(username))\n      .then(() => {\n        \n      })\n      .catch(error => {\n        console.log(error)\n      })\n    this.setState(initialState)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Grid container direction='row' justify='center'>\n        <Hidden smDown>\n          <Grid item md={3} style={{height: this.state.height - 90, position: 'relative'}}> \n            <img className={'logo-crushing'} src={LogoCrushing} alt='Crushing' /> \n          </Grid>\n        </Hidden>\n          <Grid\n            item\n            container\n            xs={12}\n            md={6}\n            direction='row'\n            justify='center'\n            alignItems='baseline'\n          >\n            \n            <img className={'logo-elecmetal'} src={LogoElecmetal} alt='Elecmetal' />\n              \n            <ForgotPasswordForm\n              checked={this.state.checked}\n              userNameError={this.state.userNameError}\n              username={this.state.username}\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n              handleCheckBoxChange={this.handleCheckBoxChange}\n              handleRedirect={this.handleRedirect}\n            />\n          </Grid>\n          <Hidden smDown>\n            <Grid item md={3}>  </Grid>\n          </Hidden>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nForgotPassword.propTypes = {\n  username: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n}\n\nForgotPassword.defaultProps = {\n  ...initialState\n}\n\nconst connected = connect()(ForgotPassword)\nexport { connected as ForgotPassword }\n"]},"metadata":{},"sourceType":"module"}