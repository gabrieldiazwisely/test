{"ast":null,"code":"import _objectSpread from \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Register/Register.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Button, Card, CardTitle, CardText, CardBody, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { userActions, notificationActions } from \"../../redux/actions\";\nconst initialState = {\n  username: \"\",\n  password: \"\",\n  repeatPassword: \"\",\n  email: \"\",\n  name: \"\",\n  lastname: \"\"\n};\n\nclass Register extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.usernameInput.focus();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const dispatch = this.props.dispatch;\n\n    if (this.state.username.length < 1) {\n      dispatch(notificationActions.error({\n        message: \"Missing required parameters: User name\"\n      }));\n      this.usernameInput.focus();\n      return;\n    }\n\n    if (this.state.password.length < 1) {\n      dispatch(notificationActions.error({\n        message: \"Missing required parameters: Password\"\n      }));\n      this.passwordInput.focus();\n      return;\n    }\n\n    if (this.state.repeatPassword.length < 1) {\n      dispatch(notificationActions.error({\n        message: \"Missing required parameters: Repeat Password\"\n      }));\n      this.repeatPasswordInput.focus();\n      return;\n    }\n\n    if (this.state.email.length < 1) {\n      dispatch(notificationActions.error({\n        message: \"Missing required parameters: Email\"\n      }));\n      this.emailInput.focus();\n      return;\n    }\n\n    if (this.state.name.length < 1) {\n      dispatch(notificationActions.error({\n        message: \"Missing required parameters: Name\"\n      }));\n      this.nameInput.focus();\n      return;\n    }\n\n    if (this.state.lastname.length < 1) {\n      dispatch(notificationActions.error({\n        message: \"Missing required parameters: Last Name\"\n      }));\n      this.lastnameInput.focus();\n      return;\n    }\n\n    dispatch(userActions.signup(_objectSpread({}, this.state)));\n    this.setState(initialState);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"bg-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"mt-5 card-login\",\n      sm: \"12\",\n      md: {\n        size: 6,\n        offset: 3\n      },\n      lg: {\n        size: 4,\n        offset: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      body: true,\n      inverse: true,\n      color: \"primary\",\n      className: \"no-radius\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \"CREATE A NEW USER\"), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"You can use your Email or a Username to access the system\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"how_to_reg\"))), /*#__PURE__*/React.createElement(Card, {\n      className: \"no-radius\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Register form\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-intel-register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"userName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      id: \"userName\",\n      innerRef: input => {\n        this.usernameInput = input;\n      },\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"userPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"userPassword\",\n      innerRef: input => {\n        this.passwordInput = input;\n      },\n      value: this.state.password,\n      onChange: this.handleChange,\n      autoComplete: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"userRepeatPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, \"Repeat Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"repeatPassword\",\n      id: \"userRepeatPassword\",\n      innerRef: input => {\n        this.repeatPasswordInput = input;\n      },\n      value: this.state.repeatPassword,\n      onChange: this.handleChange,\n      autoComplete: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"Email\",\n      innerRef: input => {\n        this.emailInput = input;\n      },\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      innerRef: input => {\n        this.nameInput = input;\n      },\n      value: this.state.name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"lastname\",\n      id: \"lastName\",\n      innerRef: input => {\n        this.lastnameInput = input;\n      },\n      value: this.state.lastname,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-3\",\n      size: \"lg\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, \"Sign Up\")))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-right mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      replace: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, \"Sign In\"))))));\n  }\n\n}\n\nconst connected = connect()(Register);\nexport { connected as Register };","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/components/Register/Register.jsx"],"names":["React","Component","connect","Link","Container","Row","Col","Button","Card","CardTitle","CardText","CardBody","Form","FormGroup","Label","Input","userActions","notificationActions","initialState","username","password","repeatPassword","email","name","lastname","Register","constructor","props","context","state","handleChange","bind","handleSubmit","componentDidMount","usernameInput","focus","event","setState","target","value","preventDefault","dispatch","length","error","message","passwordInput","repeatPasswordInput","emailInput","nameInput","lastnameInput","signup","render","size","offset","input","connected"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Card,\n  CardTitle,\n  CardText,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nimport { userActions, notificationActions } from \"../../redux/actions\";\n\nconst initialState = {\n  username: \"\",\n  password: \"\",\n  repeatPassword: \"\",\n  email: \"\",\n  name: \"\",\n  lastname: \"\"\n};\n\nclass Register extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.usernameInput.focus();\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    if (this.state.username.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: \"Missing required parameters: User name\"\n        })\n      );\n      this.usernameInput.focus();\n      return;\n    }\n    if (this.state.password.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: \"Missing required parameters: Password\"\n        })\n      );\n      this.passwordInput.focus();\n      return;\n    }\n    if (this.state.repeatPassword.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: \"Missing required parameters: Repeat Password\"\n        })\n      );\n      this.repeatPasswordInput.focus();\n      return;\n    }\n    if (this.state.email.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: \"Missing required parameters: Email\"\n        })\n      );\n      this.emailInput.focus();\n      return;\n    }\n    if (this.state.name.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: \"Missing required parameters: Name\"\n        })\n      );\n      this.nameInput.focus();\n      return;\n    }\n    if (this.state.lastname.length < 1) {\n      dispatch(\n        notificationActions.error({\n          message: \"Missing required parameters: Last Name\"\n        })\n      );\n      this.lastnameInput.focus();\n      return;\n    }\n    dispatch(userActions.signup({ ...this.state }));\n    this.setState(initialState);\n  }\n  render() {\n    return (\n      <Container fluid className=\"bg-login\">\n        <Row>\n          <Col\n            className=\"mt-5 card-login\"\n            sm=\"12\"\n            md={{ size: 6, offset: 3 }}\n            lg={{ size: 4, offset: 4 }}\n          >\n            <Card body inverse color=\"primary\" className=\"no-radius\">\n              <CardTitle>CREATE A NEW USER</CardTitle>\n              <CardText>\n                You can use your Email or a Username to access the system\n              </CardText>\n              <div className=\"icon-register\">\n                <i className=\"material-icons\">how_to_reg</i>\n              </div>\n            </Card>\n            <Card className=\"no-radius\">\n              <CardBody>\n                <CardTitle>Register form</CardTitle>\n                <div className=\"icon-intel-register\"></div>\n                <Form onSubmit={this.handleSubmit}>\n                  <FormGroup>\n                    <Label for=\"userName\">Username</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"userName\"\n                      innerRef={input => {\n                        this.usernameInput = input;\n                      }}\n                      value={this.state.username}\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <Row>\n                    <Col sm=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label for=\"userPassword\">Password</Label>\n                        <Input\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"userPassword\"\n                          innerRef={input => {\n                            this.passwordInput = input;\n                          }}\n                          value={this.state.password}\n                          onChange={this.handleChange}\n                          autoComplete=\"true\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col sm=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label for=\"userRepeatPassword\">Repeat Password</Label>\n                        <Input\n                          type=\"password\"\n                          name=\"repeatPassword\"\n                          id=\"userRepeatPassword\"\n                          innerRef={input => {\n                            this.repeatPasswordInput = input;\n                          }}\n                          value={this.state.repeatPassword}\n                          onChange={this.handleChange}\n                          autoComplete=\"true\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <FormGroup>\n                    <Label for=\"Email\">Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"Email\"\n                      innerRef={input => {\n                        this.emailInput = input;\n                      }}\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <Row>\n                    <Col sm=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"name\"\n                          id=\"name\"\n                          innerRef={input => {\n                            this.nameInput = input;\n                          }}\n                          value={this.state.name}\n                          onChange={this.handleChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col sm=\"12\" md=\"6\">\n                      <FormGroup>\n                        <Label for=\"lastName\">Last Name</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"lastname\"\n                          id=\"lastName\"\n                          innerRef={input => {\n                            this.lastnameInput = input;\n                          }}\n                          value={this.state.lastname}\n                          onChange={this.handleChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Button className=\"mt-3\" size=\"lg\" block>\n                    Sign Up\n                  </Button>\n                </Form>\n              </CardBody>\n            </Card>\n            <p className=\"text-right mt-3\">\n              <em>\n                Already have an account?{\" \"}\n                <Link to=\"/signin\" replace>\n                  Sign In\n                </Link>\n              </em>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst connected = connect()(Register);\nexport { connected as Register };\n"]},"metadata":{},"sourceType":"module"}