{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { createRootReducer } from \"./reducers\";\nimport { history } from \"../helpers\"; // routerMiddleware = for dispatching history actions\n\nconst middlewares = [routerMiddleware(history), thunkMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  const _require = require(\"redux-logger\"),\n        logger = _require.logger;\n\n  middlewares.push(logger);\n}\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst rootReducer = createRootReducer(history);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(persistedReducer, // new root reducer with router state\ncomposeEnhancers(applyMiddleware(...middlewares)));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/crowdark/Dev/REACT/crushingAPP/crushing-app-frontend/src/redux/store.js"],"names":["createStore","compose","applyMiddleware","thunkMiddleware","routerMiddleware","persistStore","persistReducer","storage","createRootReducer","history","middlewares","process","env","NODE_ENV","require","logger","push","persistConfig","key","rootReducer","persistedReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,iBAAT,QAAkC,YAAlC;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACN,gBAAgB,CAACK,OAAD,CAAjB,EAA4BN,eAA5B,CAApB;;AAEA,IAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAAA,mBACvBC,OAAO,CAAC,cAAD,CADgB;AAAA,QAClCC,MADkC,YAClCA,MADkC;;AAE1CL,EAAAA,WAAW,CAACM,IAAZ,CAAiBD,MAAjB;AACD;;AAED,MAAME,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBX,EAAAA;AAFoB,CAAtB;AAKA,MAAMY,WAAW,GAAGX,iBAAiB,CAACC,OAAD,CAArC;AACA,MAAMW,gBAAgB,GAAGd,cAAc,CAACW,aAAD,EAAgBE,WAAhB,CAAvC;AAEA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CtB,OAAxE;AAEA,OAAO,MAAMuB,KAAK,GAAGxB,WAAW,CAC9BoB,gBAD8B,EACZ;AAClBC,gBAAgB,CAACnB,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAFc,CAAzB;AAIP,OAAO,MAAMe,SAAS,GAAGpB,YAAY,CAACmB,KAAD,CAA9B","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport { createRootReducer } from \"./reducers\";\nimport { history } from \"../helpers\";\n\n// routerMiddleware = for dispatching history actions\nconst middlewares = [routerMiddleware(history), thunkMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst rootReducer = createRootReducer(history);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  persistedReducer, // new root reducer with router state\n  composeEnhancers(applyMiddleware(...middlewares))\n);\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}